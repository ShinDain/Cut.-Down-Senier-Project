#include "../Header/ObjectDefaultData.h"

void CreateObjectDefaultData()
{
	ObjectDefaultData tmpData;

	// 캐릭터
	tmpData.pstrObjectPath = CHARACTER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CHARACTER_MODEL_TEXPATH;
	tmpData.xmf3Extents = CHARACTER_MODEL_EXTENTS;
	tmpData.objectType = CHARACTER_MODEL_TYPE;
	tmpData.colliderType = CHARACTER_MODEL_COLLIDERTYPE;
	tmpData.nMass = CHARACTER_MODEL_MASS;
	tmpData.xmf3OffsetScale = CHARACTER_MODEL_SCALE;
	tmpData.renderLayer = CHARACTER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0,0,0);
	tmpData.bShadowed = CHARACTER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CHARACTER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CHARACTER_MODEL_NAME);

	tmpData.pstrObjectPath = ZOMBIE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ZOMBIE_MODEL_TEXPATH;
	tmpData.xmf3Extents = ZOMBIE_MODEL_EXTENTS;
	tmpData.objectType = ZOMBIE_MODEL_TYPE;
	tmpData.colliderType = ZOMBIE_MODEL_COLLIDERTYPE;
	tmpData.nMass = ZOMBIE_MODEL_MASS;
	tmpData.xmf3OffsetScale = ZOMBIE_MODEL_SCALE;
	tmpData.renderLayer = ZOMBIE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ZOMBIE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ZOMBIE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ZOMBIE_MODEL_NAME);

	tmpData.pstrObjectPath = HIGHZOMBIE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = HIGHZOMBIE_MODEL_TEXPATH;
	tmpData.xmf3Extents = HIGHZOMBIE_MODEL_EXTENTS;
	tmpData.objectType = HIGHZOMBIE_MODEL_TYPE;
	tmpData.colliderType = HIGHZOMBIE_MODEL_COLLIDERTYPE;
	tmpData.nMass = HIGHZOMBIE_MODEL_MASS;
	tmpData.xmf3OffsetScale = HIGHZOMBIE_MODEL_SCALE;
	tmpData.renderLayer = HIGHZOMBIE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = HIGHZOMBIE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ HIGHZOMBIE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(HIGHZOMBIE_MODEL_NAME);

	tmpData.pstrObjectPath = SCAVENGER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SCAVENGER_MODEL_TEXPATH;
	tmpData.xmf3Extents = SCAVENGER_MODEL_EXTENTS;
	tmpData.objectType = SCAVENGER_MODEL_TYPE;
	tmpData.colliderType = SCAVENGER_MODEL_COLLIDERTYPE;
	tmpData.nMass = SCAVENGER_MODEL_MASS;
	tmpData.xmf3OffsetScale = SCAVENGER_MODEL_SCALE;
	tmpData.renderLayer = SCAVENGER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SCAVENGER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SCAVENGER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SCAVENGER_MODEL_NAME);

	tmpData.pstrObjectPath = CYBER_TWINS_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CYBER_TWINS_MODEL_TEXPATH;
	tmpData.xmf3Extents = CYBER_TWINS_MODEL_EXTENTS;
	tmpData.objectType = CYBER_TWINS_MODEL_TYPE;
	tmpData.colliderType = CYBER_TWINS_MODEL_COLLIDERTYPE;
	tmpData.nMass = CYBER_TWINS_MODEL_MASS;
	tmpData.xmf3OffsetScale = CYBER_TWINS_MODEL_SCALE;
	tmpData.renderLayer = CYBER_TWINS_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CYBER_TWINS_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CYBER_TWINS_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CYBER_TWINS_MODEL_NAME);

	tmpData.pstrObjectPath = GHOUL_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = GHOUL_MODEL_TEXPATH;
	tmpData.xmf3Extents = GHOUL_MODEL_EXTENTS;
	tmpData.objectType = GHOUL_MODEL_TYPE;
	tmpData.colliderType = GHOUL_MODEL_COLLIDERTYPE;
	tmpData.nMass = GHOUL_MODEL_MASS;
	tmpData.xmf3OffsetScale = GHOUL_MODEL_SCALE;
	tmpData.renderLayer = GHOUL_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = GHOUL_MODEL_SHADOW;
	g_DefaultObjectData.insert({ GHOUL_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(GHOUL_MODEL_NAME);

	tmpData.pstrObjectPath = NECROMANCER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = NECROMANCER_MODEL_TEXPATH;
	tmpData.xmf3Extents = NECROMANCER_MODEL_EXTENTS;
	tmpData.objectType = NECROMANCER_MODEL_TYPE;
	tmpData.colliderType = NECROMANCER_MODEL_COLLIDERTYPE;
	tmpData.nMass = NECROMANCER_MODEL_MASS;
	tmpData.xmf3OffsetScale = NECROMANCER_MODEL_SCALE;
	tmpData.renderLayer = NECROMANCER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = NECROMANCER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ NECROMANCER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(NECROMANCER_MODEL_NAME);


	// 투사체
	tmpData.pstrObjectPath = PLAYER_PROJECTILE1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = PLAYER_PROJECTILE1_MODEL_TEXPATH;
	tmpData.xmf3Extents = PLAYER_PROJECTILE1_MODEL_EXTENTS;
	tmpData.objectType = PLAYER_PROJECTILE1_MODEL_TYPE;
	tmpData.colliderType = PLAYER_PROJECTILE1_MODEL_COLLIDERTYPE;
	tmpData.nMass = PLAYER_PROJECTILE1_MODEL_MASS;
	tmpData.xmf3OffsetScale = PLAYER_PROJECTILE1_MODEL_SCALE;
	tmpData.renderLayer = PLAYER_PROJECTILE1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = PLAYER_PROJECTILE1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ PLAYER_PROJECTILE1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(PLAYER_PROJECTILE1_MODEL_NAME);

	tmpData.pstrObjectPath = PLAYER_PROJECTILE2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = PLAYER_PROJECTILE2_MODEL_TEXPATH;
	tmpData.xmf3Extents = PLAYER_PROJECTILE2_MODEL_EXTENTS;
	tmpData.objectType = PLAYER_PROJECTILE2_MODEL_TYPE;
	tmpData.colliderType = PLAYER_PROJECTILE2_MODEL_COLLIDERTYPE;
	tmpData.nMass = PLAYER_PROJECTILE2_MODEL_MASS;
	tmpData.xmf3OffsetScale = PLAYER_PROJECTILE2_MODEL_SCALE;
	tmpData.renderLayer = PLAYER_PROJECTILE2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = PLAYER_PROJECTILE2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ PLAYER_PROJECTILE2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(PLAYER_PROJECTILE2_MODEL_NAME);

	tmpData.pstrObjectPath = PLAYER_PROJECTILE3_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = PLAYER_PROJECTILE3_MODEL_TEXPATH;
	tmpData.xmf3Extents = PLAYER_PROJECTILE3_MODEL_EXTENTS;
	tmpData.objectType = PLAYER_PROJECTILE3_MODEL_TYPE;
	tmpData.colliderType = PLAYER_PROJECTILE3_MODEL_COLLIDERTYPE;
	tmpData.nMass = PLAYER_PROJECTILE3_MODEL_MASS;
	tmpData.xmf3OffsetScale = PLAYER_PROJECTILE3_MODEL_SCALE;
	tmpData.renderLayer = PLAYER_PROJECTILE3_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = PLAYER_PROJECTILE3_MODEL_SHADOW;
	g_DefaultObjectData.insert({ PLAYER_PROJECTILE3_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(PLAYER_PROJECTILE3_MODEL_NAME);

	tmpData.pstrObjectPath = ENEMY_BULLET_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ENEMY_BULLET_MODEL_TEXPATH;
	tmpData.xmf3Extents = ENEMY_BULLET_MODEL_EXTENTS;
	tmpData.objectType = ENEMY_BULLET_MODEL_TYPE;
	tmpData.colliderType = ENEMY_BULLET_MODEL_COLLIDERTYPE;
	tmpData.nMass = ENEMY_BULLET_MODEL_MASS;
	tmpData.xmf3OffsetScale = ENEMY_BULLET_MODEL_SCALE;
	tmpData.renderLayer = ENEMY_BULLET_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ENEMY_BULLET_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ENEMY_BULLET_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ENEMY_BULLET_MODEL_NAME);

	tmpData.pstrObjectPath = ENEMY_MISSILE1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ENEMY_MISSILE1_MODEL_TEXPATH;
	tmpData.xmf3Extents = ENEMY_MISSILE1_MODEL_EXTENTS;
	tmpData.objectType = ENEMY_MISSILE1_MODEL_TYPE;
	tmpData.colliderType = ENEMY_MISSILE1_MODEL_COLLIDERTYPE;
	tmpData.nMass = ENEMY_MISSILE1_MODEL_MASS;
	tmpData.xmf3OffsetScale = ENEMY_MISSILE1_MODEL_SCALE;
	tmpData.renderLayer = ENEMY_MISSILE1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ENEMY_MISSILE1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ENEMY_MISSILE1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ENEMY_MISSILE1_MODEL_NAME);

	tmpData.pstrObjectPath = ENEMY_MISSILE2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ENEMY_MISSILE2_MODEL_TEXPATH;
	tmpData.xmf3Extents = ENEMY_MISSILE2_MODEL_EXTENTS;
	tmpData.objectType = ENEMY_MISSILE2_MODEL_TYPE;
	tmpData.colliderType = ENEMY_MISSILE2_MODEL_COLLIDERTYPE;
	tmpData.nMass = ENEMY_MISSILE2_MODEL_MASS;
	tmpData.xmf3OffsetScale = ENEMY_MISSILE2_MODEL_SCALE;
	tmpData.renderLayer = ENEMY_MISSILE2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ENEMY_MISSILE2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ENEMY_MISSILE2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ENEMY_MISSILE2_MODEL_NAME);

	tmpData.pstrObjectPath = ENEMY_MAGIC1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ENEMY_MAGIC1_MODEL_TEXPATH;
	tmpData.xmf3Extents = ENEMY_MAGIC1_MODEL_EXTENTS;
	tmpData.objectType = ENEMY_MAGIC1_MODEL_TYPE;
	tmpData.colliderType = ENEMY_MAGIC1_MODEL_COLLIDERTYPE;
	tmpData.nMass = ENEMY_MAGIC1_MODEL_MASS;
	tmpData.xmf3OffsetScale = ENEMY_MAGIC1_MODEL_SCALE;
	tmpData.renderLayer = ENEMY_MAGIC1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ENEMY_MAGIC1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ENEMY_MAGIC1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ENEMY_MAGIC1_MODEL_NAME);

	tmpData.pstrObjectPath = ENEMY_MAGIC2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ENEMY_MAGIC2_MODEL_TEXPATH;
	tmpData.xmf3Extents = ENEMY_MAGIC2_MODEL_EXTENTS;
	tmpData.objectType = ENEMY_MAGIC2_MODEL_TYPE;
	tmpData.colliderType = ENEMY_MAGIC2_MODEL_COLLIDERTYPE;
	tmpData.nMass = ENEMY_MAGIC2_MODEL_MASS;
	tmpData.xmf3OffsetScale = ENEMY_MAGIC2_MODEL_SCALE;
	tmpData.renderLayer = ENEMY_MAGIC2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ENEMY_MAGIC2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ENEMY_MAGIC2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ENEMY_MAGIC2_MODEL_NAME);
	
	// 이펙트
	tmpData.pstrObjectPath = BLOOD1_EFFECT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BLOOD1_EFFECT_MODEL_TEXPATH;
	tmpData.xmf3Extents = BLOOD1_EFFECT_MODEL_EXTENTS;
	tmpData.objectType = BLOOD1_EFFECT_MODEL_TYPE;
	tmpData.colliderType = BLOOD1_EFFECT_MODEL_COLLIDERTYPE;
	tmpData.nMass = BLOOD1_EFFECT_MODEL_MASS;
	tmpData.xmf3OffsetScale = BLOOD1_EFFECT_MODEL_SCALE;
	tmpData.renderLayer = BLOOD1_EFFECT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BLOOD1_EFFECT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BLOOD1_EFFECT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BLOOD1_EFFECT_MODEL_NAME);

	tmpData.pstrObjectPath = BLOOD2_EFFECT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BLOOD2_EFFECT_MODEL_TEXPATH;
	tmpData.xmf3Extents = BLOOD2_EFFECT_MODEL_EXTENTS;
	tmpData.objectType = BLOOD2_EFFECT_MODEL_TYPE;
	tmpData.colliderType = BLOOD2_EFFECT_MODEL_COLLIDERTYPE;
	tmpData.nMass = BLOOD2_EFFECT_MODEL_MASS;
	tmpData.xmf3OffsetScale = BLOOD2_EFFECT_MODEL_SCALE;
	tmpData.renderLayer = BLOOD2_EFFECT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BLOOD2_EFFECT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BLOOD2_EFFECT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BLOOD2_EFFECT_MODEL_NAME);

	tmpData.pstrObjectPath = BLOOD3_EFFECT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BLOOD3_EFFECT_MODEL_TEXPATH;
	tmpData.xmf3Extents = BLOOD3_EFFECT_MODEL_EXTENTS;
	tmpData.objectType = BLOOD3_EFFECT_MODEL_TYPE;
	tmpData.colliderType = BLOOD3_EFFECT_MODEL_COLLIDERTYPE;
	tmpData.nMass = BLOOD3_EFFECT_MODEL_MASS;
	tmpData.xmf3OffsetScale = BLOOD3_EFFECT_MODEL_SCALE;
	tmpData.renderLayer = BLOOD3_EFFECT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BLOOD3_EFFECT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BLOOD3_EFFECT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BLOOD3_EFFECT_MODEL_NAME);

	tmpData.pstrObjectPath = BLOOD4_EFFECT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BLOOD4_EFFECT_MODEL_TEXPATH;
	tmpData.xmf3Extents = BLOOD4_EFFECT_MODEL_EXTENTS;
	tmpData.objectType = BLOOD4_EFFECT_MODEL_TYPE;
	tmpData.colliderType = BLOOD4_EFFECT_MODEL_COLLIDERTYPE;
	tmpData.nMass = BLOOD4_EFFECT_MODEL_MASS;
	tmpData.xmf3OffsetScale = BLOOD4_EFFECT_MODEL_SCALE;
	tmpData.renderLayer = BLOOD4_EFFECT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BLOOD4_EFFECT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BLOOD4_EFFECT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BLOOD4_EFFECT_MODEL_NAME);

	tmpData.pstrObjectPath = BLOOD5_EFFECT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BLOOD5_EFFECT_MODEL_TEXPATH;
	tmpData.xmf3Extents = BLOOD5_EFFECT_MODEL_EXTENTS;
	tmpData.objectType = BLOOD5_EFFECT_MODEL_TYPE;
	tmpData.colliderType = BLOOD5_EFFECT_MODEL_COLLIDERTYPE;
	tmpData.nMass = BLOOD5_EFFECT_MODEL_MASS;
	tmpData.xmf3OffsetScale = BLOOD5_EFFECT_MODEL_SCALE;
	tmpData.renderLayer = BLOOD5_EFFECT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BLOOD5_EFFECT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BLOOD5_EFFECT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BLOOD5_EFFECT_MODEL_NAME);

	tmpData.pstrObjectPath = BLOOD6_EFFECT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BLOOD6_EFFECT_MODEL_TEXPATH;
	tmpData.xmf3Extents = BLOOD6_EFFECT_MODEL_EXTENTS;
	tmpData.objectType = BLOOD6_EFFECT_MODEL_TYPE;
	tmpData.colliderType = BLOOD6_EFFECT_MODEL_COLLIDERTYPE;
	tmpData.nMass = BLOOD6_EFFECT_MODEL_MASS;
	tmpData.xmf3OffsetScale = BLOOD6_EFFECT_MODEL_SCALE;
	tmpData.renderLayer = BLOOD6_EFFECT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BLOOD6_EFFECT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BLOOD6_EFFECT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BLOOD6_EFFECT_MODEL_NAME);

	tmpData.pstrObjectPath = BLOOD7_EFFECT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BLOOD7_EFFECT_MODEL_TEXPATH;
	tmpData.xmf3Extents = BLOOD7_EFFECT_MODEL_EXTENTS;
	tmpData.objectType = BLOOD7_EFFECT_MODEL_TYPE;
	tmpData.colliderType = BLOOD7_EFFECT_MODEL_COLLIDERTYPE;
	tmpData.nMass = BLOOD7_EFFECT_MODEL_MASS;
	tmpData.xmf3OffsetScale = BLOOD7_EFFECT_MODEL_SCALE;
	tmpData.renderLayer = BLOOD7_EFFECT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BLOOD7_EFFECT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BLOOD7_EFFECT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BLOOD7_EFFECT_MODEL_NAME);

	// 오브젝트
	tmpData.pstrObjectPath = WEAPON_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WEAPON_MODEL_TEXPATH;
	tmpData.xmf3Extents = WEAPON_MODEL_EXTENTS;
	tmpData.objectType = WEAPON_MODEL_TYPE;
	tmpData.colliderType = WEAPON_MODEL_COLLIDERTYPE;
	tmpData.nMass = WEAPON_MODEL_MASS;
	tmpData.xmf3OffsetScale = WEAPON_MODEL_SCALE;
	tmpData.renderLayer = WEAPON_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y - 1.3f, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WEAPON_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WEAPON_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WEAPON_MODEL_NAME);

	tmpData.pstrObjectPath = CUBE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CUBE_MODEL_TEXPATH;
	tmpData.xmf3Extents = CUBE_MODEL_EXTENTS;
	tmpData.objectType = CUBE_MODEL_TYPE;
	tmpData.colliderType = CUBE_MODEL_COLLIDERTYPE;
	tmpData.nMass = CUBE_MODEL_MASS;
	tmpData.xmf3OffsetScale = CUBE_MODEL_SCALE;
	tmpData.renderLayer = CUBE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CUBE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CUBE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CUBE_MODEL_NAME);

	//// 기본 데모 오브젝트
	//tmpData.pstrObjectPath = GROUND_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = GROUND_MODEL_TEXPATH;
	//tmpData.xmf3Extents = GROUND_MODEL_EXTENTS;
	//tmpData.objectType = GROUND_MODEL_TYPE;
	//tmpData.colliderType = GROUND_MODEL_COLLIDERTYPE;
	//tmpData.nMass = GROUND_MODEL_MASS;
	//tmpData.xmf3OffsetScale = GROUND_MODEL_SCALE;
	//tmpData.renderLayer = GROUND_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = GROUND_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ GROUND_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(GROUND_MODEL_NAME);

	//tmpData.pstrObjectPath = CARPET_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = CARPET_MODEL_TEXPATH;
	//tmpData.xmf3Extents = CARPET_MODEL_EXTENTS;
	//tmpData.objectType = CARPET_MODEL_TYPE;
	//tmpData.colliderType = CARPET_MODEL_COLLIDERTYPE;
	//tmpData.nMass = CARPET_MODEL_MASS;
	//tmpData.xmf3OffsetScale = CARPET_MODEL_SCALE;
	//tmpData.renderLayer = CARPET_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = CARPET_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ CARPET_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(CARPET_MODEL_NAME);

	//tmpData.pstrObjectPath = DRAWER_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = DRAWER_MODEL_TEXPATH;
	//tmpData.xmf3Extents = DRAWER_MODEL_EXTENTS;
	//tmpData.objectType = DRAWER_MODEL_TYPE;
	//tmpData.colliderType = DRAWER_MODEL_COLLIDERTYPE;
	//tmpData.nMass = DRAWER_MODEL_MASS;
	//tmpData.xmf3OffsetScale = DRAWER_MODEL_SCALE;
	//tmpData.renderLayer = DRAWER_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = DRAWER_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ DRAWER_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(DRAWER_MODEL_NAME);

	//tmpData.pstrObjectPath = MECHANICAL_ARM_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = MECHANICAL_ARM_MODEL_TEXPATH;
	//tmpData.xmf3Extents = MECHANICAL_ARM_MODEL_EXTENTS;
	//tmpData.objectType = MECHANICAL_ARM_MODEL_TYPE;
	//tmpData.colliderType = MECHANICAL_ARM_MODEL_COLLIDERTYPE;
	//tmpData.nMass = MECHANICAL_ARM_MODEL_MASS;
	//tmpData.xmf3OffsetScale = MECHANICAL_ARM_MODEL_SCALE;
	//tmpData.renderLayer = MECHANICAL_ARM_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(-1.0f, tmpData.xmf3Extents.y, 0.8f);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = MECHANICAL_ARM_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ MECHANICAL_ARM_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(MECHANICAL_ARM_MODEL_NAME);

	//tmpData.pstrObjectPath = OFFICE_CHAIR_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = OFFICE_CHAIR_MODEL_TEXPATH;
	//tmpData.xmf3Extents = OFFICE_CHAIR_MODEL_EXTENTS;
	//tmpData.objectType = OFFICE_CHAIR_MODEL_TYPE;
	//tmpData.colliderType = OFFICE_CHAIR_MODEL_COLLIDERTYPE;
	//tmpData.nMass = OFFICE_CHAIR_MODEL_MASS;
	//tmpData.xmf3OffsetScale = OFFICE_CHAIR_MODEL_SCALE;
	//tmpData.renderLayer = OFFICE_CHAIR_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = OFFICE_CHAIR_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ OFFICE_CHAIR_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(OFFICE_CHAIR_MODEL_NAME);

	//tmpData.pstrObjectPath = DOOR_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = DOOR_MODEL_TEXPATH;
	//tmpData.xmf3Extents = DOOR_MODEL_EXTENTS;
	//tmpData.objectType = DOOR_MODEL_TYPE;
	//tmpData.colliderType = DOOR_MODEL_COLLIDERTYPE;
	//tmpData.nMass = DOOR_MODEL_MASS;
	//tmpData.xmf3OffsetScale = DOOR_MODEL_SCALE;
	//tmpData.renderLayer = DOOR_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = DOOR_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ DOOR_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(DOOR_MODEL_NAME);

	//tmpData.pstrObjectPath = SERVER_RACK_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = SERVER_RACK_MODEL_TEXPATH;
	//tmpData.xmf3Extents = SERVER_RACK_MODEL_EXTENTS;
	//tmpData.objectType = SERVER_RACK_MODEL_TYPE;
	//tmpData.colliderType = SERVER_RACK_MODEL_COLLIDERTYPE;
	//tmpData.nMass = SERVER_RACK_MODEL_MASS;
	//tmpData.xmf3OffsetScale = SERVER_RACK_MODEL_SCALE;
	//tmpData.renderLayer = SERVER_RACK_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = SERVER_RACK_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ SERVER_RACK_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(SERVER_RACK_MODEL_NAME);

	//tmpData.pstrObjectPath = SHELF_CRATE_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = SHELF_CRATE_MODEL_TEXPATH;
	//tmpData.xmf3Extents = SHELF_CRATE_MODEL_EXTENTS;
	//tmpData.objectType = SHELF_CRATE_MODEL_TYPE;
	//tmpData.colliderType = SHELF_CRATE_MODEL_COLLIDERTYPE;
	//tmpData.nMass = SHELF_CRATE_MODEL_MASS;
	//tmpData.xmf3OffsetScale = SHELF_CRATE_MODEL_SCALE;
	//tmpData.renderLayer = SHELF_CRATE_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = SHELF_CRATE_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ SHELF_CRATE_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(SHELF_CRATE_MODEL_NAME);

	//tmpData.pstrObjectPath = SHELF_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = SHELF_MODEL_TEXPATH;
	//tmpData.xmf3Extents = SHELF_MODEL_EXTENTS;
	//tmpData.objectType = SHELF_MODEL_TYPE;
	//tmpData.colliderType = SHELF_MODEL_COLLIDERTYPE;
	//tmpData.nMass = SHELF_MODEL_MASS;
	//tmpData.xmf3OffsetScale = SHELF_MODEL_SCALE;
	//tmpData.renderLayer = SHELF_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = SHELF_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ SHELF_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(SHELF_MODEL_NAME);

	//tmpData.pstrObjectPath = STOOL_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = STOOL_MODEL_TEXPATH;
	//tmpData.xmf3Extents = STOOL_MODEL_EXTENTS;
	//tmpData.objectType = STOOL_MODEL_TYPE;
	//tmpData.colliderType = STOOL_MODEL_COLLIDERTYPE;
	//tmpData.nMass = STOOL_MODEL_MASS;
	//tmpData.xmf3OffsetScale = STOOL_MODEL_SCALE;
	//tmpData.renderLayer = STOOL_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = STOOL_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ STOOL_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(STOOL_MODEL_NAME);

	//tmpData.pstrObjectPath = TABLE_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = TABLE_MODEL_TEXPATH;
	//tmpData.xmf3Extents = TABLE_MODEL_EXTENTS;
	//tmpData.objectType = TABLE_MODEL_TYPE;
	//tmpData.colliderType = TABLE_MODEL_COLLIDERTYPE;
	//tmpData.nMass = TABLE_MODEL_MASS;
	//tmpData.xmf3OffsetScale = TABLE_MODEL_SCALE;
	//tmpData.renderLayer = TABLE_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = TABLE_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ TABLE_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(TABLE_MODEL_NAME);

	//tmpData.pstrObjectPath = TABLE_GLASS_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = TABLE_GLASS_MODEL_TEXPATH;
	//tmpData.xmf3Extents = TABLE_GLASS_MODEL_EXTENTS;
	//tmpData.objectType = TABLE_GLASS_MODEL_TYPE;
	//tmpData.colliderType = TABLE_GLASS_MODEL_COLLIDERTYPE;
	//tmpData.nMass = TABLE_GLASS_MODEL_MASS;
	//tmpData.xmf3OffsetScale = TABLE_GLASS_MODEL_SCALE;
	//tmpData.renderLayer = TABLE_GLASS_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = TABLE_GLASS_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ TABLE_GLASS_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(TABLE_GLASS_MODEL_NAME);

	//tmpData.pstrObjectPath = TABLE_SET_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = TABLE_SET_MODEL_TEXPATH;
	//tmpData.xmf3Extents = TABLE_SET_MODEL_EXTENTS;
	//tmpData.objectType = TABLE_SET_MODEL_TYPE;
	//tmpData.colliderType = TABLE_SET_MODEL_COLLIDERTYPE;
	//tmpData.nMass = TABLE_SET_MODEL_MASS;
	//tmpData.xmf3OffsetScale = TABLE_SET_MODEL_SCALE;
	//tmpData.renderLayer = TABLE_SET_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = TABLE_SET_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ TABLE_SET_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(TABLE_SET_MODEL_NAME);

	//tmpData.pstrObjectPath = VASE_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = VASE_MODEL_TEXPATH;
	//tmpData.xmf3Extents = VASE_MODEL_EXTENTS;
	//tmpData.objectType = VASE_MODEL_TYPE;
	//tmpData.colliderType = VASE_MODEL_COLLIDERTYPE;
	//tmpData.nMass = VASE_MODEL_MASS;
	//tmpData.xmf3OffsetScale = VASE_MODEL_SCALE;
	//tmpData.renderLayer = VASE_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = VASE_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ VASE_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(VASE_MODEL_NAME);

	//tmpData.pstrObjectPath = WALL_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = WALL_MODEL_TEXPATH;
	//tmpData.xmf3Extents = WALL_MODEL_EXTENTS;
	//tmpData.objectType = WALL_MODEL_TYPE;
	//tmpData.colliderType = WALL_MODEL_COLLIDERTYPE;
	//tmpData.nMass = WALL_MODEL_MASS;
	//tmpData.xmf3OffsetScale = WALL_MODEL_SCALE;
	//tmpData.renderLayer = WALL_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(-tmpData.xmf3Extents.x, tmpData.xmf3Extents.y, 0.08f);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = WALL_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ WALL_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(WALL_MODEL_NAME);

	//tmpData.pstrObjectPath = WALL_WITH_WINDOWS_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = WALL_WITH_WINDOWS_MODEL_TEXPATH;
	//tmpData.xmf3Extents = WALL_WITH_WINDOWS_MODEL_EXTENTS;
	//tmpData.objectType = WALL_WITH_WINDOWS_MODEL_TYPE;
	//tmpData.colliderType = WALL_WITH_WINDOWS_MODEL_COLLIDERTYPE;
	//tmpData.nMass = WALL_WITH_WINDOWS_MODEL_MASS;
	//tmpData.xmf3OffsetScale = WALL_WITH_WINDOWS_MODEL_SCALE;
	//tmpData.renderLayer = WALL_WITH_WINDOWS_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = WALL_WITH_WINDOWS_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ WALL_WITH_WINDOWS_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(WALL_WITH_WINDOWS_MODEL_NAME);

	//tmpData.pstrObjectPath = WALL_PILLAR_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = WALL_PILLAR_MODEL_TEXPATH;
	//tmpData.xmf3Extents = WALL_PILLAR_MODEL_EXTENTS;
	//tmpData.objectType = WALL_PILLAR_MODEL_TYPE;
	//tmpData.colliderType = WALL_PILLAR_MODEL_COLLIDERTYPE;
	//tmpData.nMass = WALL_PILLAR_MODEL_MASS;
	//tmpData.xmf3OffsetScale = WALL_PILLAR_MODEL_SCALE;
	//tmpData.renderLayer = WALL_PILLAR_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = WALL_PILLAR_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ WALL_PILLAR_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(WALL_PILLAR_MODEL_NAME);

	//tmpData.pstrObjectPath = WALL_PILLAR_3_MODEL_OBJECTPATH;
	//tmpData.pstrTexPath = WALL_PILLAR_3_MODEL_TEXPATH;
	//tmpData.xmf3Extents = WALL_PILLAR_3_MODEL_EXTENTS;
	//tmpData.objectType = WALL_PILLAR_3_MODEL_TYPE;
	//tmpData.colliderType = WALL_PILLAR_3_MODEL_COLLIDERTYPE;
	//tmpData.nMass = WALL_PILLAR_3_MODEL_MASS;
	//tmpData.xmf3OffsetScale = WALL_PILLAR_3_MODEL_SCALE;
	//tmpData.renderLayer = WALL_PILLAR_3_MODEL_RENDERLAYER;
	//tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0.1f, tmpData.xmf3Extents.y, -0.1f);
	//tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	//tmpData.bShadowed = WALL_PILLAR_3_MODEL_SHADOW;
	//g_DefaultObjectData.insert({ WALL_PILLAR_3_MODEL_NAME, tmpData });
	//g_DefaultObjectNames.emplace_back(WALL_PILLAR_3_MODEL_NAME);

	tmpData.pstrObjectPath = PLATFORM_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = PLATFORM_MODEL_TEXPATH;
	tmpData.xmf3Extents = PLATFORM_MODEL_EXTENTS;
	tmpData.objectType = PLATFORM_MODEL_TYPE;
	tmpData.colliderType = PLATFORM_MODEL_COLLIDERTYPE;
	tmpData.nMass = PLATFORM_MODEL_MASS;
	tmpData.xmf3OffsetScale = PLATFORM_MODEL_SCALE;
	tmpData.renderLayer = PLATFORM_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0.0f, tmpData.xmf3Extents.y, 0.0f);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = PLATFORM_MODEL_SHADOW;
	g_DefaultObjectData.insert({ PLATFORM_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(PLATFORM_MODEL_NAME);
	
	tmpData.pstrObjectPath = JUST_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = JUST_MODEL_TEXPATH;
	tmpData.xmf3Extents = JUST_MODEL_EXTENTS;
	tmpData.objectType = JUST_MODEL_TYPE;
	tmpData.colliderType = JUST_MODEL_COLLIDERTYPE;
	tmpData.nMass = JUST_MODEL_MASS;
	tmpData.xmf3OffsetScale = JUST_MODEL_SCALE;
	tmpData.renderLayer = JUST_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0.0f, 0, 0.0f);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = JUST_MODEL_SHADOW;
	g_DefaultObjectData.insert({ JUST_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(JUST_MODEL_NAME);



	// 아이템
	tmpData.pstrObjectPath = SCOREITEM1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SCOREITEM1_MODEL_TEXPATH;
	tmpData.xmf3Extents = SCOREITEM1_MODEL_EXTENTS;
	tmpData.objectType = SCOREITEM1_MODEL_TYPE;
	tmpData.colliderType = SCOREITEM1_MODEL_COLLIDERTYPE;
	tmpData.nMass = SCOREITEM1_MODEL_MASS;
	tmpData.xmf3OffsetScale = SCOREITEM1_MODEL_SCALE;
	tmpData.renderLayer = SCOREITEM1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SCOREITEM1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SCOREITEM1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SCOREITEM1_MODEL_NAME);

	tmpData.pstrObjectPath = SCOREITEM2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SCOREITEM2_MODEL_TEXPATH;
	tmpData.xmf3Extents = SCOREITEM2_MODEL_EXTENTS;
	tmpData.objectType = SCOREITEM2_MODEL_TYPE;
	tmpData.colliderType = SCOREITEM2_MODEL_COLLIDERTYPE;
	tmpData.nMass = SCOREITEM2_MODEL_MASS;
	tmpData.xmf3OffsetScale = SCOREITEM2_MODEL_SCALE;
	tmpData.renderLayer = SCOREITEM2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SCOREITEM2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SCOREITEM2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SCOREITEM2_MODEL_NAME);

	tmpData.pstrObjectPath = SCOREITEM3_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SCOREITEM3_MODEL_TEXPATH;
	tmpData.xmf3Extents = SCOREITEM3_MODEL_EXTENTS;
	tmpData.objectType = SCOREITEM3_MODEL_TYPE;
	tmpData.colliderType = SCOREITEM3_MODEL_COLLIDERTYPE;
	tmpData.nMass = SCOREITEM3_MODEL_MASS;
	tmpData.xmf3OffsetScale = SCOREITEM3_MODEL_SCALE;
	tmpData.renderLayer = SCOREITEM3_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SCOREITEM3_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SCOREITEM3_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SCOREITEM3_MODEL_NAME);

	tmpData.pstrObjectPath = SCOREITEM4_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SCOREITEM4_MODEL_TEXPATH;
	tmpData.xmf3Extents = SCOREITEM4_MODEL_EXTENTS;
	tmpData.objectType = SCOREITEM4_MODEL_TYPE;
	tmpData.colliderType = SCOREITEM4_MODEL_COLLIDERTYPE;
	tmpData.nMass = SCOREITEM4_MODEL_MASS;
	tmpData.xmf3OffsetScale = SCOREITEM4_MODEL_SCALE;
	tmpData.renderLayer = SCOREITEM4_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SCOREITEM4_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SCOREITEM4_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SCOREITEM4_MODEL_NAME);

	tmpData.pstrObjectPath = SCOREITEM5_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SCOREITEM5_MODEL_TEXPATH;
	tmpData.xmf3Extents = SCOREITEM5_MODEL_EXTENTS;
	tmpData.objectType = SCOREITEM5_MODEL_TYPE;
	tmpData.colliderType = SCOREITEM5_MODEL_COLLIDERTYPE;
	tmpData.nMass = SCOREITEM5_MODEL_MASS;
	tmpData.xmf3OffsetScale = SCOREITEM5_MODEL_SCALE;
	tmpData.renderLayer = SCOREITEM5_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SCOREITEM5_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SCOREITEM5_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SCOREITEM5_MODEL_NAME);

	tmpData.pstrObjectPath = HEALITEM_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = HEALITEM_MODEL_TEXPATH;
	tmpData.xmf3Extents = HEALITEM_MODEL_EXTENTS;
	tmpData.objectType = HEALITEM_MODEL_TYPE;
	tmpData.colliderType = HEALITEM_MODEL_COLLIDERTYPE;
	tmpData.nMass = HEALITEM_MODEL_MASS;
	tmpData.xmf3OffsetScale = HEALITEM_MODEL_SCALE;
	tmpData.renderLayer = HEALITEM_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = HEALITEM_MODEL_SHADOW;
	g_DefaultObjectData.insert({ HEALITEM_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(HEALITEM_MODEL_NAME);

	// 이벤트 오브젝트
	tmpData.pstrObjectPath = ENTER_BOX_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ENTER_BOX_MODEL_TEXPATH;
	tmpData.xmf3Extents = ENTER_BOX_MODEL_EXTENTS;
	tmpData.objectType = ENTER_BOX_MODEL_TYPE;
	tmpData.colliderType = ENTER_BOX_MODEL_COLLIDERTYPE;
	tmpData.nMass = ENTER_BOX_MODEL_MASS;
	tmpData.xmf3OffsetScale = ENTER_BOX_MODEL_SCALE;
	tmpData.renderLayer = ENTER_BOX_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ENTER_BOX_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ENTER_BOX_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ENTER_BOX_MODEL_NAME);

	// Outside 오브젝트
	tmpData.pstrObjectPath = GRASS_GROUND_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = GRASS_GROUND_MODEL_TEXPATH;
	tmpData.xmf3Extents = GRASS_GROUND_MODEL_EXTENTS;
	tmpData.objectType = GRASS_GROUND_MODEL_TYPE;
	tmpData.colliderType = GRASS_GROUND_MODEL_COLLIDERTYPE;
	tmpData.nMass = GRASS_GROUND_MODEL_MASS;
	tmpData.xmf3OffsetScale = GRASS_GROUND_MODEL_SCALE;
	tmpData.renderLayer = GRASS_GROUND_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = GRASS_GROUND_MODEL_SHADOW;
	g_DefaultObjectData.insert({ GRASS_GROUND_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(GRASS_GROUND_MODEL_NAME);

	tmpData.pstrObjectPath = HOSPITAL_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = HOSPITAL_MODEL_TEXPATH;
	tmpData.xmf3Extents = HOSPITAL_MODEL_EXTENTS;
	tmpData.objectType = HOSPITAL_MODEL_TYPE;
	tmpData.colliderType = HOSPITAL_MODEL_COLLIDERTYPE;
	tmpData.nMass = HOSPITAL_MODEL_MASS;
	tmpData.xmf3OffsetScale = HOSPITAL_MODEL_SCALE;
	tmpData.renderLayer = HOSPITAL_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = HOSPITAL_MODEL_SHADOW;
	g_DefaultObjectData.insert({ HOSPITAL_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(HOSPITAL_MODEL_NAME);

	tmpData.pstrObjectPath = BARREL1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BARREL1_MODEL_TEXPATH;
	tmpData.xmf3Extents = BARREL1_MODEL_EXTENTS;
	tmpData.objectType = BARREL1_MODEL_TYPE;
	tmpData.colliderType = BARREL1_MODEL_COLLIDERTYPE;
	tmpData.nMass = BARREL1_MODEL_MASS;
	tmpData.xmf3OffsetScale = BARREL1_MODEL_SCALE;
	tmpData.renderLayer = BARREL1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BARREL1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BARREL1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BARREL1_MODEL_NAME);

	tmpData.pstrObjectPath = BARREL2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BARREL2_MODEL_TEXPATH;
	tmpData.xmf3Extents = BARREL2_MODEL_EXTENTS;
	tmpData.objectType = BARREL2_MODEL_TYPE;
	tmpData.colliderType = BARREL2_MODEL_COLLIDERTYPE;
	tmpData.nMass = BARREL2_MODEL_MASS;
	tmpData.xmf3OffsetScale = BARREL2_MODEL_SCALE;
	tmpData.renderLayer = BARREL2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BARREL2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BARREL2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BARREL2_MODEL_NAME);

	tmpData.pstrObjectPath = BARREL3_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BARREL3_MODEL_TEXPATH;
	tmpData.xmf3Extents = BARREL3_MODEL_EXTENTS;
	tmpData.objectType = BARREL3_MODEL_TYPE;
	tmpData.colliderType = BARREL3_MODEL_COLLIDERTYPE;
	tmpData.nMass = BARREL3_MODEL_MASS;
	tmpData.xmf3OffsetScale = BARREL3_MODEL_SCALE;
	tmpData.renderLayer = BARREL3_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BARREL3_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BARREL3_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BARREL3_MODEL_NAME);

	tmpData.pstrObjectPath = BARREL4_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BARREL4_MODEL_TEXPATH;
	tmpData.xmf3Extents = BARREL4_MODEL_EXTENTS;
	tmpData.objectType = BARREL4_MODEL_TYPE;
	tmpData.colliderType = BARREL4_MODEL_COLLIDERTYPE;
	tmpData.nMass = BARREL4_MODEL_MASS;
	tmpData.xmf3OffsetScale = BARREL4_MODEL_SCALE;
	tmpData.renderLayer = BARREL4_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BARREL4_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BARREL4_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BARREL4_MODEL_NAME);

	tmpData.pstrObjectPath = BARREL5_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BARREL5_MODEL_TEXPATH;
	tmpData.xmf3Extents = BARREL5_MODEL_EXTENTS;
	tmpData.objectType = BARREL5_MODEL_TYPE;
	tmpData.colliderType = BARREL5_MODEL_COLLIDERTYPE;
	tmpData.nMass = BARREL5_MODEL_MASS;
	tmpData.xmf3OffsetScale = BARREL5_MODEL_SCALE;
	tmpData.renderLayer = BARREL5_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BARREL5_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BARREL5_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BARREL5_MODEL_NAME);

	tmpData.pstrObjectPath = BENCH_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BENCH_MODEL_TEXPATH;
	tmpData.xmf3Extents = BENCH_MODEL_EXTENTS;
	tmpData.objectType = BENCH_MODEL_TYPE;
	tmpData.colliderType = BENCH_MODEL_COLLIDERTYPE;
	tmpData.nMass = BENCH_MODEL_MASS;
	tmpData.xmf3OffsetScale = BENCH_MODEL_SCALE;
	tmpData.renderLayer = BENCH_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BENCH_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BENCH_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BENCH_MODEL_NAME);

	tmpData.pstrObjectPath = BOILER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BOILER_MODEL_TEXPATH;
	tmpData.xmf3Extents = BOILER_MODEL_EXTENTS;
	tmpData.objectType = BOILER_MODEL_TYPE;
	tmpData.colliderType = BOILER_MODEL_COLLIDERTYPE;
	tmpData.nMass = BOILER_MODEL_MASS;
	tmpData.xmf3OffsetScale = BOILER_MODEL_SCALE;
	tmpData.renderLayer = BOILER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BOILER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BOILER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BOILER_MODEL_NAME);

	tmpData.pstrObjectPath = BIGSHELF_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BIGSHELF_MODEL_TEXPATH;
	tmpData.xmf3Extents = BIGSHELF_MODEL_EXTENTS;
	tmpData.objectType = BIGSHELF_MODEL_TYPE;
	tmpData.colliderType = BIGSHELF_MODEL_COLLIDERTYPE;
	tmpData.nMass = BIGSHELF_MODEL_MASS;
	tmpData.xmf3OffsetScale = BIGSHELF_MODEL_SCALE;
	tmpData.renderLayer = BIGSHELF_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BIGSHELF_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BIGSHELF_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BIGSHELF_MODEL_NAME);

	tmpData.pstrObjectPath = BIGSHELF_STOCK_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BIGSHELF_STOCK_MODEL_TEXPATH;
	tmpData.xmf3Extents = BIGSHELF_STOCK_MODEL_EXTENTS;
	tmpData.objectType = BIGSHELF_STOCK_MODEL_TYPE;
	tmpData.colliderType = BIGSHELF_STOCK_MODEL_COLLIDERTYPE;
	tmpData.nMass = BIGSHELF_STOCK_MODEL_MASS;
	tmpData.xmf3OffsetScale = BIGSHELF_STOCK_MODEL_SCALE;
	tmpData.renderLayer = BIGSHELF_STOCK_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BIGSHELF_STOCK_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BIGSHELF_STOCK_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BIGSHELF_STOCK_MODEL_NAME);

	tmpData.pstrObjectPath = WOOD_BOX1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WOOD_BOX1_MODEL_TEXPATH;
	tmpData.xmf3Extents = WOOD_BOX1_MODEL_EXTENTS;
	tmpData.objectType = WOOD_BOX1_MODEL_TYPE;
	tmpData.colliderType = WOOD_BOX1_MODEL_COLLIDERTYPE;
	tmpData.nMass = WOOD_BOX1_MODEL_MASS;
	tmpData.xmf3OffsetScale = WOOD_BOX1_MODEL_SCALE;
	tmpData.renderLayer = WOOD_BOX1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WOOD_BOX1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WOOD_BOX1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WOOD_BOX1_MODEL_NAME);

	tmpData.pstrObjectPath = CABELS_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CABELS_MODEL_TEXPATH;
	tmpData.xmf3Extents = CABELS_MODEL_EXTENTS;
	tmpData.objectType = CABELS_MODEL_TYPE;
	tmpData.colliderType = CABELS_MODEL_COLLIDERTYPE;
	tmpData.nMass = CABELS_MODEL_MASS;
	tmpData.xmf3OffsetScale = CABELS_MODEL_SCALE;
	tmpData.renderLayer = CABELS_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CABELS_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CABELS_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CABELS_MODEL_NAME);

	tmpData.pstrObjectPath = CAN_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  CAN_MODEL_TEXPATH;
	tmpData.xmf3Extents =  CAN_MODEL_EXTENTS;
	tmpData.objectType =  CAN_MODEL_TYPE;
	tmpData.colliderType =  CAN_MODEL_COLLIDERTYPE;
	tmpData.nMass =  CAN_MODEL_MASS;
	tmpData.xmf3OffsetScale =  CAN_MODEL_SCALE;
	tmpData.renderLayer =  CAN_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  CAN_MODEL_SHADOW;
	g_DefaultObjectData.insert({  CAN_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( CAN_MODEL_NAME);

	tmpData.pstrObjectPath = CAN_DAMAGED_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CAN_DAMAGED_MODEL_TEXPATH;
	tmpData.xmf3Extents = CAN_DAMAGED_MODEL_EXTENTS;
	tmpData.objectType = CAN_DAMAGED_MODEL_TYPE;
	tmpData.colliderType = CAN_DAMAGED_MODEL_COLLIDERTYPE;
	tmpData.nMass = CAN_DAMAGED_MODEL_MASS;
	tmpData.xmf3OffsetScale = CAN_DAMAGED_MODEL_SCALE;
	tmpData.renderLayer = CAN_DAMAGED_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CAN_DAMAGED_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CAN_DAMAGED_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CAN_DAMAGED_MODEL_NAME);

	tmpData.pstrObjectPath = CONTAINER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CONTAINER_MODEL_TEXPATH;
	tmpData.xmf3Extents = CONTAINER_MODEL_EXTENTS;
	tmpData.objectType = CONTAINER_MODEL_TYPE;
	tmpData.colliderType = CONTAINER_MODEL_COLLIDERTYPE;
	tmpData.nMass = CONTAINER_MODEL_MASS;
	tmpData.xmf3OffsetScale = CONTAINER_MODEL_SCALE;
	tmpData.renderLayer = CONTAINER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CONTAINER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CONTAINER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CONTAINER_MODEL_NAME);

	tmpData.pstrObjectPath = DUMP_CONTAINER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  DUMP_CONTAINER_MODEL_TEXPATH;
	tmpData.xmf3Extents =  DUMP_CONTAINER_MODEL_EXTENTS;
	tmpData.objectType =  DUMP_CONTAINER_MODEL_TYPE;
	tmpData.colliderType =  DUMP_CONTAINER_MODEL_COLLIDERTYPE;
	tmpData.nMass =  DUMP_CONTAINER_MODEL_MASS;
	tmpData.xmf3OffsetScale =  DUMP_CONTAINER_MODEL_SCALE;
	tmpData.renderLayer =  DUMP_CONTAINER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  DUMP_CONTAINER_MODEL_SHADOW;
	g_DefaultObjectData.insert({  DUMP_CONTAINER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( DUMP_CONTAINER_MODEL_NAME);

	tmpData.pstrObjectPath = OUTSIDE_WOOD_CHAIR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = OUTSIDE_WOOD_CHAIR_MODEL_TEXPATH;
	tmpData.xmf3Extents = OUTSIDE_WOOD_CHAIR_MODEL_EXTENTS;
	tmpData.objectType = OUTSIDE_WOOD_CHAIR_MODEL_TYPE;
	tmpData.colliderType = OUTSIDE_WOOD_CHAIR_MODEL_COLLIDERTYPE;
	tmpData.nMass = OUTSIDE_WOOD_CHAIR_MODEL_MASS;
	tmpData.xmf3OffsetScale = OUTSIDE_WOOD_CHAIR_MODEL_SCALE;
	tmpData.renderLayer = OUTSIDE_WOOD_CHAIR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = OUTSIDE_WOOD_CHAIR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ OUTSIDE_WOOD_CHAIR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(OUTSIDE_WOOD_CHAIR_MODEL_NAME);

	tmpData.pstrObjectPath = CONCRETE_FENCE1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CONCRETE_FENCE1_MODEL_TEXPATH;
	tmpData.xmf3Extents = CONCRETE_FENCE1_MODEL_EXTENTS;
	tmpData.objectType = CONCRETE_FENCE1_MODEL_TYPE;
	tmpData.colliderType = CONCRETE_FENCE1_MODEL_COLLIDERTYPE;
	tmpData.nMass = CONCRETE_FENCE1_MODEL_MASS;
	tmpData.xmf3OffsetScale = CONCRETE_FENCE1_MODEL_SCALE;
	tmpData.renderLayer = CONCRETE_FENCE1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CONCRETE_FENCE1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CONCRETE_FENCE1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CONCRETE_FENCE1_MODEL_NAME);

	tmpData.pstrObjectPath = CONCRETE_FENCE2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CONCRETE_FENCE2_MODEL_TEXPATH;
	tmpData.xmf3Extents = CONCRETE_FENCE2_MODEL_EXTENTS;
	tmpData.objectType = CONCRETE_FENCE2_MODEL_TYPE;
	tmpData.colliderType = CONCRETE_FENCE2_MODEL_COLLIDERTYPE;
	tmpData.nMass = CONCRETE_FENCE2_MODEL_MASS;
	tmpData.xmf3OffsetScale = CONCRETE_FENCE2_MODEL_SCALE;
	tmpData.renderLayer = CONCRETE_FENCE2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CONCRETE_FENCE2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CONCRETE_FENCE2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CONCRETE_FENCE2_MODEL_NAME);

	tmpData.pstrObjectPath = CONCRETE_FENCE3_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CONCRETE_FENCE3_MODEL_TEXPATH;
	tmpData.xmf3Extents = CONCRETE_FENCE3_MODEL_EXTENTS;
	tmpData.objectType = CONCRETE_FENCE3_MODEL_TYPE;
	tmpData.colliderType = CONCRETE_FENCE3_MODEL_COLLIDERTYPE;
	tmpData.nMass = CONCRETE_FENCE3_MODEL_MASS;
	tmpData.xmf3OffsetScale = CONCRETE_FENCE3_MODEL_SCALE;
	tmpData.renderLayer = CONCRETE_FENCE3_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CONCRETE_FENCE3_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CONCRETE_FENCE3_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CONCRETE_FENCE3_MODEL_NAME);

	tmpData.pstrObjectPath = ELECTO_PANEL_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ELECTO_PANEL_MODEL_TEXPATH;
	tmpData.xmf3Extents = ELECTO_PANEL_MODEL_EXTENTS;
	tmpData.objectType = ELECTO_PANEL_MODEL_TYPE;
	tmpData.colliderType = ELECTO_PANEL_MODEL_COLLIDERTYPE;
	tmpData.nMass = ELECTO_PANEL_MODEL_MASS;
	tmpData.xmf3OffsetScale = ELECTO_PANEL_MODEL_SCALE;
	tmpData.renderLayer = ELECTO_PANEL_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ELECTO_PANEL_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ELECTO_PANEL_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ELECTO_PANEL_MODEL_NAME);

	tmpData.pstrObjectPath = METAL_FENCE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = METAL_FENCE_MODEL_TEXPATH;
	tmpData.xmf3Extents = METAL_FENCE_MODEL_EXTENTS;
	tmpData.objectType = METAL_FENCE_MODEL_TYPE;
	tmpData.colliderType = METAL_FENCE_MODEL_COLLIDERTYPE;
	tmpData.nMass = METAL_FENCE_MODEL_MASS;
	tmpData.xmf3OffsetScale = METAL_FENCE_MODEL_SCALE;
	tmpData.renderLayer = METAL_FENCE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = METAL_FENCE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ METAL_FENCE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(METAL_FENCE_MODEL_NAME);

	tmpData.pstrObjectPath = FLOOR_PANEL2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = FLOOR_PANEL2_MODEL_TEXPATH;
	tmpData.xmf3Extents = FLOOR_PANEL2_MODEL_EXTENTS;
	tmpData.objectType = FLOOR_PANEL2_MODEL_TYPE;
	tmpData.colliderType = FLOOR_PANEL2_MODEL_COLLIDERTYPE;
	tmpData.nMass = FLOOR_PANEL2_MODEL_MASS;
	tmpData.xmf3OffsetScale = FLOOR_PANEL2_MODEL_SCALE;
	tmpData.renderLayer = FLOOR_PANEL2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = FLOOR_PANEL2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ FLOOR_PANEL2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(FLOOR_PANEL2_MODEL_NAME);

	tmpData.pstrObjectPath = HANGAR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = HANGAR_MODEL_TEXPATH;
	tmpData.xmf3Extents = HANGAR_MODEL_EXTENTS;
	tmpData.objectType = HANGAR_MODEL_TYPE;
	tmpData.colliderType = HANGAR_MODEL_COLLIDERTYPE;
	tmpData.nMass = HANGAR_MODEL_MASS;
	tmpData.xmf3OffsetScale = HANGAR_MODEL_SCALE;
	tmpData.renderLayer = HANGAR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = HANGAR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ HANGAR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(HANGAR_MODEL_NAME);

	tmpData.pstrObjectPath = MAIN_DOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = MAIN_DOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = MAIN_DOOR_MODEL_EXTENTS;
	tmpData.objectType = MAIN_DOOR_MODEL_TYPE;
	tmpData.colliderType = MAIN_DOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = MAIN_DOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = MAIN_DOOR_MODEL_SCALE;
	tmpData.renderLayer = MAIN_DOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = MAIN_DOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ MAIN_DOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(MAIN_DOOR_MODEL_NAME);

	tmpData.pstrObjectPath = MACHINE1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = MACHINE1_MODEL_TEXPATH;
	tmpData.xmf3Extents = MACHINE1_MODEL_EXTENTS;
	tmpData.objectType = MACHINE1_MODEL_TYPE;
	tmpData.colliderType = MACHINE1_MODEL_COLLIDERTYPE;
	tmpData.nMass = MACHINE1_MODEL_MASS;
	tmpData.xmf3OffsetScale = MACHINE1_MODEL_SCALE;
	tmpData.renderLayer = MACHINE1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = MACHINE1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ MACHINE1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(MACHINE1_MODEL_NAME);

	tmpData.pstrObjectPath = MACHINE2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = MACHINE2_MODEL_TEXPATH;
	tmpData.xmf3Extents = MACHINE2_MODEL_EXTENTS;
	tmpData.objectType = MACHINE2_MODEL_TYPE;
	tmpData.colliderType = MACHINE2_MODEL_COLLIDERTYPE;
	tmpData.nMass = MACHINE2_MODEL_MASS;
	tmpData.xmf3OffsetScale = MACHINE2_MODEL_SCALE;
	tmpData.renderLayer = MACHINE2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = MACHINE2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ MACHINE2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(MACHINE2_MODEL_NAME);

	tmpData.pstrObjectPath = MACHINE3_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  MACHINE3_MODEL_TEXPATH;
	tmpData.xmf3Extents =  MACHINE3_MODEL_EXTENTS;
	tmpData.objectType =  MACHINE3_MODEL_TYPE;
	tmpData.colliderType =  MACHINE3_MODEL_COLLIDERTYPE;
	tmpData.nMass =  MACHINE3_MODEL_MASS;
	tmpData.xmf3OffsetScale =  MACHINE3_MODEL_SCALE;
	tmpData.renderLayer =  MACHINE3_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  MACHINE3_MODEL_SHADOW;
	g_DefaultObjectData.insert({  MACHINE3_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( MACHINE3_MODEL_NAME);

	tmpData.pstrObjectPath = MACHINE6_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = MACHINE6_MODEL_TEXPATH;
	tmpData.xmf3Extents = MACHINE6_MODEL_EXTENTS;
	tmpData.objectType = MACHINE6_MODEL_TYPE;
	tmpData.colliderType = MACHINE6_MODEL_COLLIDERTYPE;
	tmpData.nMass = MACHINE6_MODEL_MASS;
	tmpData.xmf3OffsetScale = MACHINE6_MODEL_SCALE;
	tmpData.renderLayer = MACHINE6_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = MACHINE6_MODEL_SHADOW;
	g_DefaultObjectData.insert({ MACHINE6_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(MACHINE6_MODEL_NAME);

	tmpData.pstrObjectPath = MACHINE7_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = MACHINE7_MODEL_TEXPATH;
	tmpData.xmf3Extents = MACHINE7_MODEL_EXTENTS;
	tmpData.objectType = MACHINE7_MODEL_TYPE;
	tmpData.colliderType = MACHINE7_MODEL_COLLIDERTYPE;
	tmpData.nMass = MACHINE7_MODEL_MASS;
	tmpData.xmf3OffsetScale = MACHINE7_MODEL_SCALE;
	tmpData.renderLayer = MACHINE7_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = MACHINE7_MODEL_SHADOW;
	g_DefaultObjectData.insert({ MACHINE7_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(MACHINE7_MODEL_NAME);

	tmpData.pstrObjectPath = OIL_TANK_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = OIL_TANK_MODEL_TEXPATH;
	tmpData.xmf3Extents = OIL_TANK_MODEL_EXTENTS;
	tmpData.objectType = OIL_TANK_MODEL_TYPE;
	tmpData.colliderType = OIL_TANK_MODEL_COLLIDERTYPE;
	tmpData.nMass = OIL_TANK_MODEL_MASS;
	tmpData.xmf3OffsetScale = OIL_TANK_MODEL_SCALE;
	tmpData.renderLayer = OIL_TANK_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = OIL_TANK_MODEL_SHADOW;
	g_DefaultObjectData.insert({ OIL_TANK_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(OIL_TANK_MODEL_NAME);

	tmpData.pstrObjectPath = OLD_SEA_TREE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = OLD_SEA_TREE_MODEL_TEXPATH;
	tmpData.xmf3Extents = OLD_SEA_TREE_MODEL_EXTENTS;
	tmpData.objectType = OLD_SEA_TREE_MODEL_TYPE;
	tmpData.colliderType = OLD_SEA_TREE_MODEL_COLLIDERTYPE;
	tmpData.nMass = OLD_SEA_TREE_MODEL_MASS;
	tmpData.xmf3OffsetScale = OLD_SEA_TREE_MODEL_SCALE;
	tmpData.renderLayer = OLD_SEA_TREE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = OLD_SEA_TREE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ OLD_SEA_TREE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(OLD_SEA_TREE_MODEL_NAME);

	tmpData.pstrObjectPath = PIPE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  PIPE_MODEL_TEXPATH;
	tmpData.xmf3Extents =  PIPE_MODEL_EXTENTS;
	tmpData.objectType =  PIPE_MODEL_TYPE;
	tmpData.colliderType =  PIPE_MODEL_COLLIDERTYPE;
	tmpData.nMass =  PIPE_MODEL_MASS;
	tmpData.xmf3OffsetScale =  PIPE_MODEL_SCALE;
	tmpData.renderLayer =  PIPE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  PIPE_MODEL_SHADOW;
	g_DefaultObjectData.insert({  PIPE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( PIPE_MODEL_NAME);

	tmpData.pstrObjectPath = PIPE_PILE1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = PIPE_PILE1_MODEL_TEXPATH;
	tmpData.xmf3Extents = PIPE_PILE1_MODEL_EXTENTS;
	tmpData.objectType = PIPE_PILE1_MODEL_TYPE;
	tmpData.colliderType = PIPE_PILE1_MODEL_COLLIDERTYPE;
	tmpData.nMass = PIPE_PILE1_MODEL_MASS;
	tmpData.xmf3OffsetScale = PIPE_PILE1_MODEL_SCALE;
	tmpData.renderLayer = PIPE_PILE1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0,0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = PIPE_PILE1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ PIPE_PILE1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(PIPE_PILE1_MODEL_NAME);

	tmpData.pstrObjectPath = PIPE_PILE2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = PIPE_PILE2_MODEL_TEXPATH;
	tmpData.xmf3Extents = PIPE_PILE2_MODEL_EXTENTS;
	tmpData.objectType = PIPE_PILE2_MODEL_TYPE;
	tmpData.colliderType = PIPE_PILE2_MODEL_COLLIDERTYPE;
	tmpData.nMass = PIPE_PILE2_MODEL_MASS;
	tmpData.xmf3OffsetScale = PIPE_PILE2_MODEL_SCALE;
	tmpData.renderLayer = PIPE_PILE2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0,0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = PIPE_PILE2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ PIPE_PILE2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(PIPE_PILE2_MODEL_NAME);

	tmpData.pstrObjectPath = ROAD_BLOCK_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ROAD_BLOCK_MODEL_TEXPATH;
	tmpData.xmf3Extents = ROAD_BLOCK_MODEL_EXTENTS;
	tmpData.objectType = ROAD_BLOCK_MODEL_TYPE;
	tmpData.colliderType = ROAD_BLOCK_MODEL_COLLIDERTYPE;
	tmpData.nMass = ROAD_BLOCK_MODEL_MASS;
	tmpData.xmf3OffsetScale = ROAD_BLOCK_MODEL_SCALE;
	tmpData.renderLayer = ROAD_BLOCK_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ROAD_BLOCK_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ROAD_BLOCK_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ROAD_BLOCK_MODEL_NAME);

	tmpData.pstrObjectPath = ROAD_B_FLOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ROAD_B_FLOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = ROAD_B_FLOOR_MODEL_EXTENTS;
	tmpData.objectType = ROAD_B_FLOOR_MODEL_TYPE;
	tmpData.colliderType = ROAD_B_FLOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = ROAD_B_FLOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = ROAD_B_FLOOR_MODEL_SCALE;
	tmpData.renderLayer = ROAD_B_FLOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ROAD_B_FLOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ROAD_B_FLOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ROAD_B_FLOOR_MODEL_NAME);

	tmpData.pstrObjectPath = ROAD_S_BEND2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ROAD_S_BEND2_MODEL_TEXPATH;
	tmpData.xmf3Extents = ROAD_S_BEND2_MODEL_EXTENTS;
	tmpData.objectType = ROAD_S_BEND2_MODEL_TYPE;
	tmpData.colliderType = ROAD_S_BEND2_MODEL_COLLIDERTYPE;
	tmpData.nMass = ROAD_S_BEND2_MODEL_MASS;
	tmpData.xmf3OffsetScale = ROAD_S_BEND2_MODEL_SCALE;
	tmpData.renderLayer = ROAD_S_BEND2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ROAD_S_BEND2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ROAD_S_BEND2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ROAD_S_BEND2_MODEL_NAME);

	tmpData.pstrObjectPath = ROAD_S_FLOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ROAD_S_FLOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = ROAD_S_FLOOR_MODEL_EXTENTS;
	tmpData.objectType = ROAD_S_FLOOR_MODEL_TYPE;
	tmpData.colliderType = ROAD_S_FLOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = ROAD_S_FLOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = ROAD_S_FLOOR_MODEL_SCALE;
	tmpData.renderLayer = ROAD_S_FLOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ROAD_S_FLOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ROAD_S_FLOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ROAD_S_FLOOR_MODEL_NAME);

	tmpData.pstrObjectPath = ROAD_S_TILE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ROAD_S_TILE_MODEL_TEXPATH;
	tmpData.xmf3Extents = ROAD_S_TILE_MODEL_EXTENTS;
	tmpData.objectType = ROAD_S_TILE_MODEL_TYPE;
	tmpData.colliderType = ROAD_S_TILE_MODEL_COLLIDERTYPE;
	tmpData.nMass = ROAD_S_TILE_MODEL_MASS;
	tmpData.xmf3OffsetScale = ROAD_S_TILE_MODEL_SCALE;
	tmpData.renderLayer = ROAD_S_TILE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ROAD_S_TILE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ROAD_S_TILE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ROAD_S_TILE_MODEL_NAME);

	tmpData.pstrObjectPath = SMALL_METALIC_CASE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SMALL_METALIC_CASE_MODEL_TEXPATH;
	tmpData.xmf3Extents = SMALL_METALIC_CASE_MODEL_EXTENTS;
	tmpData.objectType = SMALL_METALIC_CASE_MODEL_TYPE;
	tmpData.colliderType = SMALL_METALIC_CASE_MODEL_COLLIDERTYPE;
	tmpData.nMass = SMALL_METALIC_CASE_MODEL_MASS;
	tmpData.xmf3OffsetScale = SMALL_METALIC_CASE_MODEL_SCALE;
	tmpData.renderLayer = SMALL_METALIC_CASE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SMALL_METALIC_CASE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SMALL_METALIC_CASE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SMALL_METALIC_CASE_MODEL_NAME);

	tmpData.pstrObjectPath = TOWER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = TOWER_MODEL_TEXPATH;
	tmpData.xmf3Extents = TOWER_MODEL_EXTENTS;
	tmpData.objectType = TOWER_MODEL_TYPE;
	tmpData.colliderType = TOWER_MODEL_COLLIDERTYPE;
	tmpData.nMass = TOWER_MODEL_MASS;
	tmpData.xmf3OffsetScale = TOWER_MODEL_SCALE;
	tmpData.renderLayer = TOWER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = TOWER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ TOWER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(TOWER_MODEL_NAME);

	tmpData.pstrObjectPath = TOWER_SHORT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = TOWER_SHORT_MODEL_TEXPATH;
	tmpData.xmf3Extents = TOWER_SHORT_MODEL_EXTENTS;
	tmpData.objectType = TOWER_SHORT_MODEL_TYPE;
	tmpData.colliderType = TOWER_SHORT_MODEL_COLLIDERTYPE;
	tmpData.nMass = TOWER_SHORT_MODEL_MASS;
	tmpData.xmf3OffsetScale = TOWER_SHORT_MODEL_SCALE;
	tmpData.renderLayer = TOWER_SHORT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = TOWER_SHORT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ TOWER_SHORT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(TOWER_SHORT_MODEL_NAME);

	tmpData.pstrObjectPath = WOODEN_BOX_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WOODEN_BOX_MODEL_TEXPATH;
	tmpData.xmf3Extents = WOODEN_BOX_MODEL_EXTENTS;
	tmpData.objectType = WOODEN_BOX_MODEL_TYPE;
	tmpData.colliderType = WOODEN_BOX_MODEL_COLLIDERTYPE;
	tmpData.nMass = WOODEN_BOX_MODEL_MASS;
	tmpData.xmf3OffsetScale = WOODEN_BOX_MODEL_SCALE;
	tmpData.renderLayer = WOODEN_BOX_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WOODEN_BOX_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WOODEN_BOX_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WOODEN_BOX_MODEL_NAME);

	tmpData.pstrObjectPath = WOODEN_BOX_SQUARE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WOODEN_BOX_SQUARE_MODEL_TEXPATH;
	tmpData.xmf3Extents = WOODEN_BOX_SQUARE_MODEL_EXTENTS;
	tmpData.objectType = WOODEN_BOX_SQUARE_MODEL_TYPE;
	tmpData.colliderType = WOODEN_BOX_SQUARE_MODEL_COLLIDERTYPE;
	tmpData.nMass = WOODEN_BOX_SQUARE_MODEL_MASS;
	tmpData.xmf3OffsetScale = WOODEN_BOX_SQUARE_MODEL_SCALE;
	tmpData.renderLayer = WOODEN_BOX_SQUARE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WOODEN_BOX_SQUARE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WOODEN_BOX_SQUARE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WOODEN_BOX_SQUARE_MODEL_NAME);

	tmpData.pstrObjectPath = BED_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BED_MODEL_TEXPATH;
	tmpData.xmf3Extents = BED_MODEL_EXTENTS;
	tmpData.objectType = BED_MODEL_TYPE;
	tmpData.colliderType = BED_MODEL_COLLIDERTYPE;
	tmpData.nMass = BED_MODEL_MASS;
	tmpData.xmf3OffsetScale = BED_MODEL_SCALE;
	tmpData.renderLayer = BED_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BED_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BED_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BED_MODEL_NAME);

	tmpData.pstrObjectPath = BED_FEATHER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BED_FEATHER_MODEL_TEXPATH;
	tmpData.xmf3Extents = BED_FEATHER_MODEL_EXTENTS;
	tmpData.objectType = BED_FEATHER_MODEL_TYPE;
	tmpData.colliderType = BED_FEATHER_MODEL_COLLIDERTYPE;
	tmpData.nMass = BED_FEATHER_MODEL_MASS;
	tmpData.xmf3OffsetScale = BED_FEATHER_MODEL_SCALE;
	tmpData.renderLayer = BED_FEATHER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BED_FEATHER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BED_FEATHER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BED_FEATHER_MODEL_NAME);

	tmpData.pstrObjectPath = BEDROOM_FACING_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BEDROOM_FACING_MODEL_TEXPATH;
	tmpData.xmf3Extents = BEDROOM_FACING_MODEL_EXTENTS;
	tmpData.objectType = BEDROOM_FACING_MODEL_TYPE;
	tmpData.colliderType = BEDROOM_FACING_MODEL_COLLIDERTYPE;
	tmpData.nMass = BEDROOM_FACING_MODEL_MASS;
	tmpData.xmf3OffsetScale = BEDROOM_FACING_MODEL_SCALE;
	tmpData.renderLayer = BEDROOM_FACING_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BEDROOM_FACING_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BEDROOM_FACING_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BEDROOM_FACING_MODEL_NAME);

	tmpData.pstrObjectPath = BEDROOM_FLOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BEDROOM_FLOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = BEDROOM_FLOOR_MODEL_EXTENTS;
	tmpData.objectType = BEDROOM_FLOOR_MODEL_TYPE;
	tmpData.colliderType = BEDROOM_FLOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = BEDROOM_FLOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = BEDROOM_FLOOR_MODEL_SCALE;
	tmpData.renderLayer = BEDROOM_FLOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BEDROOM_FLOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BEDROOM_FLOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BEDROOM_FLOOR_MODEL_NAME);

	tmpData.pstrObjectPath = BLACK_PLANE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BLACK_PLANE_MODEL_TEXPATH;
	tmpData.xmf3Extents = BLACK_PLANE_MODEL_EXTENTS;
	tmpData.objectType = BLACK_PLANE_MODEL_TYPE;
	tmpData.colliderType = BLACK_PLANE_MODEL_COLLIDERTYPE;
	tmpData.nMass = BLACK_PLANE_MODEL_MASS;
	tmpData.xmf3OffsetScale = BLACK_PLANE_MODEL_SCALE;
	tmpData.renderLayer = BLACK_PLANE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BLACK_PLANE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BLACK_PLANE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BLACK_PLANE_MODEL_NAME);

	tmpData.pstrObjectPath = BOARD_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BOARD_MODEL_TEXPATH;
	tmpData.xmf3Extents = BOARD_MODEL_EXTENTS;
	tmpData.objectType = BOARD_MODEL_TYPE;
	tmpData.colliderType = BOARD_MODEL_COLLIDERTYPE;
	tmpData.nMass = BOARD_MODEL_MASS;
	tmpData.xmf3OffsetScale = BOARD_MODEL_SCALE;
	tmpData.renderLayer = BOARD_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, -tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BOARD_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BOARD_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BOARD_MODEL_NAME);

	tmpData.pstrObjectPath =CASEMETALIC_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =CASEMETALIC_MODEL_TEXPATH;
	tmpData.xmf3Extents =CASEMETALIC_MODEL_EXTENTS;
	tmpData.objectType =CASEMETALIC_MODEL_TYPE;
	tmpData.colliderType =CASEMETALIC_MODEL_COLLIDERTYPE;
	tmpData.nMass =CASEMETALIC_MODEL_MASS;
	tmpData.xmf3OffsetScale =CASEMETALIC_MODEL_SCALE;
	tmpData.renderLayer =CASEMETALIC_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =CASEMETALIC_MODEL_SHADOW;
	g_DefaultObjectData.insert({CASEMETALIC_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CASEMETALIC_MODEL_NAME);

	tmpData.pstrObjectPath = CHAIR_LEATHER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CHAIR_LEATHER_MODEL_TEXPATH;
	tmpData.xmf3Extents = CHAIR_LEATHER_MODEL_EXTENTS;
	tmpData.objectType = CHAIR_LEATHER_MODEL_TYPE;
	tmpData.colliderType = CHAIR_LEATHER_MODEL_COLLIDERTYPE;
	tmpData.nMass = CHAIR_LEATHER_MODEL_MASS;
	tmpData.xmf3OffsetScale = CHAIR_LEATHER_MODEL_SCALE;
	tmpData.renderLayer = CHAIR_LEATHER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CHAIR_LEATHER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CHAIR_LEATHER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CHAIR_LEATHER_MODEL_NAME);

	tmpData.pstrObjectPath = CHAIR_SCHOOL_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CHAIR_SCHOOL_MODEL_TEXPATH;
	tmpData.xmf3Extents = CHAIR_SCHOOL_MODEL_EXTENTS;
	tmpData.objectType = CHAIR_SCHOOL_MODEL_TYPE;
	tmpData.colliderType = CHAIR_SCHOOL_MODEL_COLLIDERTYPE;
	tmpData.nMass = CHAIR_SCHOOL_MODEL_MASS;
	tmpData.xmf3OffsetScale = CHAIR_SCHOOL_MODEL_SCALE;
	tmpData.renderLayer = CHAIR_SCHOOL_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CHAIR_SCHOOL_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CHAIR_SCHOOL_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CHAIR_SCHOOL_MODEL_NAME);

	tmpData.pstrObjectPath = CHAIR_WHITE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CHAIR_WHITE_MODEL_TEXPATH;
	tmpData.xmf3Extents = CHAIR_WHITE_MODEL_EXTENTS;
	tmpData.objectType = CHAIR_WHITE_MODEL_TYPE;
	tmpData.colliderType = CHAIR_WHITE_MODEL_COLLIDERTYPE;
	tmpData.nMass = CHAIR_WHITE_MODEL_MASS;
	tmpData.xmf3OffsetScale = CHAIR_WHITE_MODEL_SCALE;
	tmpData.renderLayer = CHAIR_WHITE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CHAIR_WHITE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CHAIR_WHITE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CHAIR_WHITE_MODEL_NAME);

	tmpData.pstrObjectPath = CLASSROOM_FLOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CLASSROOM_FLOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = CLASSROOM_FLOOR_MODEL_EXTENTS;
	tmpData.objectType = CLASSROOM_FLOOR_MODEL_TYPE;
	tmpData.colliderType = CLASSROOM_FLOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = CLASSROOM_FLOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = CLASSROOM_FLOOR_MODEL_SCALE;
	tmpData.renderLayer = CLASSROOM_FLOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CLASSROOM_FLOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CLASSROOM_FLOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CLASSROOM_FLOOR_MODEL_NAME);

	tmpData.pstrObjectPath = CURTAIN_MEDIC_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CURTAIN_MEDIC_MODEL_TEXPATH;
	tmpData.xmf3Extents = CURTAIN_MEDIC_MODEL_EXTENTS;
	tmpData.objectType = CURTAIN_MEDIC_MODEL_TYPE;
	tmpData.colliderType = CURTAIN_MEDIC_MODEL_COLLIDERTYPE;
	tmpData.nMass = CURTAIN_MEDIC_MODEL_MASS;
	tmpData.xmf3OffsetScale = CURTAIN_MEDIC_MODEL_SCALE;
	tmpData.renderLayer = CURTAIN_MEDIC_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CURTAIN_MEDIC_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CURTAIN_MEDIC_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CURTAIN_MEDIC_MODEL_NAME);

	tmpData.pstrObjectPath = DINNING_FLOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = DINNING_FLOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = DINNING_FLOOR_MODEL_EXTENTS;
	tmpData.objectType = DINNING_FLOOR_MODEL_TYPE;
	tmpData.colliderType = DINNING_FLOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = DINNING_FLOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = DINNING_FLOOR_MODEL_SCALE;
	tmpData.renderLayer = DINNING_FLOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = DINNING_FLOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ DINNING_FLOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(DINNING_FLOOR_MODEL_NAME);

	tmpData.pstrObjectPath = DOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = DOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = DOOR_MODEL_EXTENTS;
	tmpData.objectType = DOOR_MODEL_TYPE;
	tmpData.colliderType = DOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = DOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = DOOR_MODEL_SCALE;
	tmpData.renderLayer = DOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(tmpData.xmf3Extents.x, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = DOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ DOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(DOOR_MODEL_NAME);

	tmpData.pstrObjectPath = DOOR_V3_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = DOOR_V3_MODEL_TEXPATH;
	tmpData.xmf3Extents = DOOR_V3_MODEL_EXTENTS;
	tmpData.objectType = DOOR_V3_MODEL_TYPE;
	tmpData.colliderType = DOOR_V3_MODEL_COLLIDERTYPE;
	tmpData.nMass = DOOR_V3_MODEL_MASS;
	tmpData.xmf3OffsetScale = DOOR_V3_MODEL_SCALE;
	tmpData.renderLayer = DOOR_V3_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = DOOR_V3_MODEL_SHADOW;
	g_DefaultObjectData.insert({ DOOR_V3_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(DOOR_V3_MODEL_NAME);

	tmpData.pstrObjectPath = DOORD_V1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = DOORD_V1_MODEL_TEXPATH;
	tmpData.xmf3Extents = DOORD_V1_MODEL_EXTENTS;
	tmpData.objectType = DOORD_V1_MODEL_TYPE;
	tmpData.colliderType = DOORD_V1_MODEL_COLLIDERTYPE;
	tmpData.nMass = DOORD_V1_MODEL_MASS;
	tmpData.xmf3OffsetScale = DOORD_V1_MODEL_SCALE;
	tmpData.renderLayer = DOORD_V1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = DOORD_V1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ DOORD_V1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(DOORD_V1_MODEL_NAME);

	tmpData.pstrObjectPath = DOORD_V2_FRAME_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = DOORD_V2_FRAME_MODEL_TEXPATH;
	tmpData.xmf3Extents = DOORD_V2_FRAME_MODEL_EXTENTS;
	tmpData.objectType = DOORD_V2_FRAME_MODEL_TYPE;
	tmpData.colliderType = DOORD_V2_FRAME_MODEL_COLLIDERTYPE;
	tmpData.nMass = DOORD_V2_FRAME_MODEL_MASS;
	tmpData.xmf3OffsetScale = DOORD_V2_FRAME_MODEL_SCALE;
	tmpData.renderLayer = DOORD_V2_FRAME_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = DOORD_V2_FRAME_MODEL_SHADOW;
	g_DefaultObjectData.insert({ DOORD_V2_FRAME_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(DOORD_V2_FRAME_MODEL_NAME);

	tmpData.pstrObjectPath = DOORD_V2_LEFT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = DOORD_V2_LEFT_MODEL_TEXPATH;
	tmpData.xmf3Extents = DOORD_V2_LEFT_MODEL_EXTENTS;
	tmpData.objectType = DOORD_V2_LEFT_MODEL_TYPE;
	tmpData.colliderType = DOORD_V2_LEFT_MODEL_COLLIDERTYPE;
	tmpData.nMass = DOORD_V2_LEFT_MODEL_MASS;
	tmpData.xmf3OffsetScale = DOORD_V2_LEFT_MODEL_SCALE;
	tmpData.renderLayer = DOORD_V2_LEFT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(-tmpData.xmf3Extents.x, -tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = DOORD_V2_LEFT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ DOORD_V2_LEFT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(DOORD_V2_LEFT_MODEL_NAME);

	tmpData.pstrObjectPath = DOORD_V2_RIGHT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = DOORD_V2_RIGHT_MODEL_TEXPATH;
	tmpData.xmf3Extents = DOORD_V2_RIGHT_MODEL_EXTENTS;
	tmpData.objectType = DOORD_V2_RIGHT_MODEL_TYPE;
	tmpData.colliderType = DOORD_V2_RIGHT_MODEL_COLLIDERTYPE;
	tmpData.nMass = DOORD_V2_RIGHT_MODEL_MASS;
	tmpData.xmf3OffsetScale = DOORD_V2_RIGHT_MODEL_SCALE;
	tmpData.renderLayer = DOORD_V2_RIGHT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(tmpData.xmf3Extents.x, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = DOORD_V2_RIGHT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ DOORD_V2_RIGHT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(DOORD_V2_RIGHT_MODEL_NAME);

	tmpData.pstrObjectPath = HEATER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = HEATER_MODEL_TEXPATH;
	tmpData.xmf3Extents = HEATER_MODEL_EXTENTS;
	tmpData.objectType = HEATER_MODEL_TYPE;
	tmpData.colliderType = HEATER_MODEL_COLLIDERTYPE;
	tmpData.nMass = HEATER_MODEL_MASS;
	tmpData.xmf3OffsetScale = HEATER_MODEL_SCALE;
	tmpData.renderLayer = HEATER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = HEATER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ HEATER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(HEATER_MODEL_NAME);

	tmpData.pstrObjectPath = INSIDE_FLOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = INSIDE_FLOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = INSIDE_FLOOR_MODEL_EXTENTS;
	tmpData.objectType = INSIDE_FLOOR_MODEL_TYPE;
	tmpData.colliderType = INSIDE_FLOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = INSIDE_FLOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = INSIDE_FLOOR_MODEL_SCALE;
	tmpData.renderLayer = INSIDE_FLOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = INSIDE_FLOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ INSIDE_FLOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(INSIDE_FLOOR_MODEL_NAME);

	tmpData.pstrObjectPath = INSIDE_ROOF_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = INSIDE_ROOF_MODEL_TEXPATH;
	tmpData.xmf3Extents = INSIDE_ROOF_MODEL_EXTENTS;
	tmpData.objectType = INSIDE_ROOF_MODEL_TYPE;
	tmpData.colliderType = INSIDE_ROOF_MODEL_COLLIDERTYPE;
	tmpData.nMass = INSIDE_ROOF_MODEL_MASS;
	tmpData.xmf3OffsetScale = INSIDE_ROOF_MODEL_SCALE;
	tmpData.renderLayer = INSIDE_ROOF_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = INSIDE_ROOF_MODEL_SHADOW;
	g_DefaultObjectData.insert({ INSIDE_ROOF_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(INSIDE_ROOF_MODEL_NAME);

	tmpData.pstrObjectPath =  MATTRESS_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  MATTRESS_MODEL_TEXPATH;
	tmpData.xmf3Extents =  MATTRESS_MODEL_EXTENTS;
	tmpData.objectType =  MATTRESS_MODEL_TYPE;
	tmpData.colliderType =  MATTRESS_MODEL_COLLIDERTYPE;
	tmpData.nMass =  MATTRESS_MODEL_MASS;
	tmpData.xmf3OffsetScale =  MATTRESS_MODEL_SCALE;
	tmpData.renderLayer =  MATTRESS_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  MATTRESS_MODEL_SHADOW;
	g_DefaultObjectData.insert({  MATTRESS_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( MATTRESS_MODEL_NAME);

	tmpData.pstrObjectPath = MEDRACK_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = MEDRACK_MODEL_TEXPATH;
	tmpData.xmf3Extents = MEDRACK_MODEL_EXTENTS;
	tmpData.objectType = MEDRACK_MODEL_TYPE;
	tmpData.colliderType = MEDRACK_MODEL_COLLIDERTYPE;
	tmpData.nMass = MEDRACK_MODEL_MASS;
	tmpData.xmf3OffsetScale = MEDRACK_MODEL_SCALE;
	tmpData.renderLayer = MEDRACK_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = MEDRACK_MODEL_SHADOW;
	g_DefaultObjectData.insert({ MEDRACK_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(MEDRACK_MODEL_NAME);

	tmpData.pstrObjectPath = MORGUE_FLOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = MORGUE_FLOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = MORGUE_FLOOR_MODEL_EXTENTS;
	tmpData.objectType = MORGUE_FLOOR_MODEL_TYPE;
	tmpData.colliderType = MORGUE_FLOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = MORGUE_FLOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = MORGUE_FLOOR_MODEL_SCALE;
	tmpData.renderLayer = MORGUE_FLOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = MORGUE_FLOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ MORGUE_FLOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(MORGUE_FLOOR_MODEL_NAME);

	tmpData.pstrObjectPath = MORGUE_BOX_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = MORGUE_BOX_MODEL_TEXPATH;
	tmpData.xmf3Extents = MORGUE_BOX_MODEL_EXTENTS;
	tmpData.objectType = MORGUE_BOX_MODEL_TYPE;
	tmpData.colliderType = MORGUE_BOX_MODEL_COLLIDERTYPE;
	tmpData.nMass = MORGUE_BOX_MODEL_MASS;
	tmpData.xmf3OffsetScale = MORGUE_BOX_MODEL_SCALE;
	tmpData.renderLayer = MORGUE_BOX_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = MORGUE_BOX_MODEL_SHADOW;
	g_DefaultObjectData.insert({ MORGUE_BOX_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(MORGUE_BOX_MODEL_NAME);

	tmpData.pstrObjectPath = MORGUE_TABLE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = MORGUE_TABLE_MODEL_TEXPATH;
	tmpData.xmf3Extents = MORGUE_TABLE_MODEL_EXTENTS;
	tmpData.objectType = MORGUE_TABLE_MODEL_TYPE;
	tmpData.colliderType = MORGUE_TABLE_MODEL_COLLIDERTYPE;
	tmpData.nMass = MORGUE_TABLE_MODEL_MASS;
	tmpData.xmf3OffsetScale = MORGUE_TABLE_MODEL_SCALE;
	tmpData.renderLayer = MORGUE_TABLE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = MORGUE_TABLE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ MORGUE_TABLE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(MORGUE_TABLE_MODEL_NAME);

	tmpData.pstrObjectPath =  MORGUE_WHEEL_BED_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  MORGUE_WHEEL_BED_MODEL_TEXPATH;
	tmpData.xmf3Extents =  MORGUE_WHEEL_BED_MODEL_EXTENTS;
	tmpData.objectType =  MORGUE_WHEEL_BED_MODEL_TYPE;
	tmpData.colliderType =  MORGUE_WHEEL_BED_MODEL_COLLIDERTYPE;
	tmpData.nMass =  MORGUE_WHEEL_BED_MODEL_MASS;
	tmpData.xmf3OffsetScale =  MORGUE_WHEEL_BED_MODEL_SCALE;
	tmpData.renderLayer =  MORGUE_WHEEL_BED_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  MORGUE_WHEEL_BED_MODEL_SHADOW;
	g_DefaultObjectData.insert({  MORGUE_WHEEL_BED_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( MORGUE_WHEEL_BED_MODEL_NAME);

	tmpData.pstrObjectPath = NEONLAMP_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = NEONLAMP_MODEL_TEXPATH;
	tmpData.xmf3Extents = NEONLAMP_MODEL_EXTENTS;
	tmpData.objectType = NEONLAMP_MODEL_TYPE;
	tmpData.colliderType = NEONLAMP_MODEL_COLLIDERTYPE;
	tmpData.nMass = NEONLAMP_MODEL_MASS;
	tmpData.xmf3OffsetScale = NEONLAMP_MODEL_SCALE;
	tmpData.renderLayer = NEONLAMP_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, -tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = NEONLAMP_MODEL_SHADOW;
	g_DefaultObjectData.insert({ NEONLAMP_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(NEONLAMP_MODEL_NAME);

	tmpData.pstrObjectPath = PILLOW_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = PILLOW_MODEL_TEXPATH;
	tmpData.xmf3Extents = PILLOW_MODEL_EXTENTS;
	tmpData.objectType = PILLOW_MODEL_TYPE;
	tmpData.colliderType = PILLOW_MODEL_COLLIDERTYPE;
	tmpData.nMass = PILLOW_MODEL_MASS;
	tmpData.xmf3OffsetScale = PILLOW_MODEL_SCALE;
	tmpData.renderLayer = PILLOW_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = PILLOW_MODEL_SHADOW;
	g_DefaultObjectData.insert({ PILLOW_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(PILLOW_MODEL_NAME);

	tmpData.pstrObjectPath = POSTER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = POSTER_MODEL_TEXPATH;
	tmpData.xmf3Extents = POSTER_MODEL_EXTENTS;
	tmpData.objectType = POSTER_MODEL_TYPE;
	tmpData.colliderType = POSTER_MODEL_COLLIDERTYPE;
	tmpData.nMass = POSTER_MODEL_MASS;
	tmpData.xmf3OffsetScale = POSTER_MODEL_SCALE;
	tmpData.renderLayer = POSTER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = POSTER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ POSTER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(POSTER_MODEL_NAME);

	tmpData.pstrObjectPath = SINGLE_LIGHT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SINGLE_LIGHT_MODEL_TEXPATH;
	tmpData.xmf3Extents = SINGLE_LIGHT_MODEL_EXTENTS;
	tmpData.objectType = SINGLE_LIGHT_MODEL_TYPE;
	tmpData.colliderType = SINGLE_LIGHT_MODEL_COLLIDERTYPE;
	tmpData.nMass = SINGLE_LIGHT_MODEL_MASS;
	tmpData.xmf3OffsetScale = SINGLE_LIGHT_MODEL_SCALE;
	tmpData.renderLayer = SINGLE_LIGHT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, -tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SINGLE_LIGHT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SINGLE_LIGHT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SINGLE_LIGHT_MODEL_NAME);

	tmpData.pstrObjectPath = SINK_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SINK_MODEL_TEXPATH;
	tmpData.xmf3Extents = SINK_MODEL_EXTENTS;
	tmpData.objectType = SINK_MODEL_TYPE;
	tmpData.colliderType = SINK_MODEL_COLLIDERTYPE;
	tmpData.nMass = SINK_MODEL_MASS;
	tmpData.xmf3OffsetScale = SINK_MODEL_SCALE;
	tmpData.renderLayer = SINK_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SINK_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SINK_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SINK_MODEL_NAME);

	tmpData.pstrObjectPath =  STOCK_FLOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  STOCK_FLOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents =  STOCK_FLOOR_MODEL_EXTENTS;
	tmpData.objectType =  STOCK_FLOOR_MODEL_TYPE;
	tmpData.colliderType =  STOCK_FLOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass =  STOCK_FLOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale =  STOCK_FLOOR_MODEL_SCALE;
	tmpData.renderLayer =  STOCK_FLOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  STOCK_FLOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({  STOCK_FLOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( STOCK_FLOOR_MODEL_NAME);

	tmpData.pstrObjectPath = SURGERY_TABLE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SURGERY_TABLE_MODEL_TEXPATH;
	tmpData.xmf3Extents = SURGERY_TABLE_MODEL_EXTENTS;
	tmpData.objectType = SURGERY_TABLE_MODEL_TYPE;
	tmpData.colliderType = SURGERY_TABLE_MODEL_COLLIDERTYPE;
	tmpData.nMass = SURGERY_TABLE_MODEL_MASS;
	tmpData.xmf3OffsetScale = SURGERY_TABLE_MODEL_SCALE;
	tmpData.renderLayer = SURGERY_TABLE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SURGERY_TABLE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SURGERY_TABLE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SURGERY_TABLE_MODEL_NAME);

	tmpData.pstrObjectPath =  SURGERY_WHEEL_BAD_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  SURGERY_WHEEL_BAD_MODEL_TEXPATH;
	tmpData.xmf3Extents =  SURGERY_WHEEL_BAD_MODEL_EXTENTS;
	tmpData.objectType =  SURGERY_WHEEL_BAD_MODEL_TYPE;
	tmpData.colliderType =  SURGERY_WHEEL_BAD_MODEL_COLLIDERTYPE;
	tmpData.nMass =  SURGERY_WHEEL_BAD_MODEL_MASS;
	tmpData.xmf3OffsetScale =  SURGERY_WHEEL_BAD_MODEL_SCALE;
	tmpData.renderLayer =  SURGERY_WHEEL_BAD_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  SURGERY_WHEEL_BAD_MODEL_SHADOW;
	g_DefaultObjectData.insert({  SURGERY_WHEEL_BAD_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( SURGERY_WHEEL_BAD_MODEL_NAME);

	tmpData.pstrObjectPath = SUSPENSION_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SUSPENSION_MODEL_TEXPATH;
	tmpData.xmf3Extents = SUSPENSION_MODEL_EXTENTS;
	tmpData.objectType = SUSPENSION_MODEL_TYPE;
	tmpData.colliderType = SUSPENSION_MODEL_COLLIDERTYPE;
	tmpData.nMass = SUSPENSION_MODEL_MASS;
	tmpData.xmf3OffsetScale = SUSPENSION_MODEL_SCALE;
	tmpData.renderLayer = SUSPENSION_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SUSPENSION_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SUSPENSION_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SUSPENSION_MODEL_NAME);

	tmpData.pstrObjectPath = TABLE_BED_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = TABLE_BED_MODEL_TEXPATH;
	tmpData.xmf3Extents = TABLE_BED_MODEL_EXTENTS;
	tmpData.objectType = TABLE_BED_MODEL_TYPE;
	tmpData.colliderType = TABLE_BED_MODEL_COLLIDERTYPE;
	tmpData.nMass = TABLE_BED_MODEL_MASS;
	tmpData.xmf3OffsetScale = TABLE_BED_MODEL_SCALE;
	tmpData.renderLayer = TABLE_BED_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = TABLE_BED_MODEL_SHADOW;
	g_DefaultObjectData.insert({ TABLE_BED_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(TABLE_BED_MODEL_NAME);

	tmpData.pstrObjectPath =  TABLE_SCHOOL_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  TABLE_SCHOOL_MODEL_TEXPATH;
	tmpData.xmf3Extents =  TABLE_SCHOOL_MODEL_EXTENTS;
	tmpData.objectType =  TABLE_SCHOOL_MODEL_TYPE;
	tmpData.colliderType =  TABLE_SCHOOL_MODEL_COLLIDERTYPE;
	tmpData.nMass =  TABLE_SCHOOL_MODEL_MASS;
	tmpData.xmf3OffsetScale =  TABLE_SCHOOL_MODEL_SCALE;
	tmpData.renderLayer =  TABLE_SCHOOL_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  TABLE_SCHOOL_MODEL_SHADOW;
	g_DefaultObjectData.insert({  TABLE_SCHOOL_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( TABLE_SCHOOL_MODEL_NAME);

	tmpData.pstrObjectPath = TABLE_WHITE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = TABLE_WHITE_MODEL_TEXPATH;
	tmpData.xmf3Extents = TABLE_WHITE_MODEL_EXTENTS;
	tmpData.objectType = TABLE_WHITE_MODEL_TYPE;
	tmpData.colliderType = TABLE_WHITE_MODEL_COLLIDERTYPE;
	tmpData.nMass = TABLE_WHITE_MODEL_MASS;
	tmpData.xmf3OffsetScale = TABLE_WHITE_MODEL_SCALE;
	tmpData.renderLayer = TABLE_WHITE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = TABLE_WHITE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ TABLE_WHITE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(TABLE_WHITE_MODEL_NAME);

	tmpData.pstrObjectPath = TABLE_WHITE_KITCHEN_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = TABLE_WHITE_KITCHEN_MODEL_TEXPATH;
	tmpData.xmf3Extents = TABLE_WHITE_KITCHEN_MODEL_EXTENTS;
	tmpData.objectType = TABLE_WHITE_KITCHEN_MODEL_TYPE;
	tmpData.colliderType = TABLE_WHITE_KITCHEN_MODEL_COLLIDERTYPE;
	tmpData.nMass = TABLE_WHITE_KITCHEN_MODEL_MASS;
	tmpData.xmf3OffsetScale = TABLE_WHITE_KITCHEN_MODEL_SCALE;
	tmpData.renderLayer = TABLE_WHITE_KITCHEN_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = TABLE_WHITE_KITCHEN_MODEL_SHADOW;
	g_DefaultObjectData.insert({ TABLE_WHITE_KITCHEN_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(TABLE_WHITE_KITCHEN_MODEL_NAME);

	tmpData.pstrObjectPath = TAP_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = TAP_MODEL_TEXPATH;
	tmpData.xmf3Extents = TAP_MODEL_EXTENTS;
	tmpData.objectType = TAP_MODEL_TYPE;
	tmpData.colliderType = TAP_MODEL_COLLIDERTYPE;
	tmpData.nMass = TAP_MODEL_MASS;
	tmpData.xmf3OffsetScale = TAP_MODEL_SCALE;
	tmpData.renderLayer = TAP_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = TAP_MODEL_SHADOW;
	g_DefaultObjectData.insert({ TAP_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(TAP_MODEL_NAME);

	tmpData.pstrObjectPath = WALL_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WALL_MODEL_TEXPATH;
	tmpData.xmf3Extents = WALL_MODEL_EXTENTS;
	tmpData.objectType = WALL_MODEL_TYPE;
	tmpData.colliderType = WALL_MODEL_COLLIDERTYPE;
	tmpData.nMass = WALL_MODEL_MASS;
	tmpData.xmf3OffsetScale = WALL_MODEL_SCALE;
	tmpData.renderLayer = WALL_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WALL_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WALL_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WALL_MODEL_NAME);

	tmpData.pstrObjectPath =  WALL2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  WALL2_MODEL_TEXPATH;
	tmpData.xmf3Extents =  WALL2_MODEL_EXTENTS;
	tmpData.objectType =  WALL2_MODEL_TYPE;
	tmpData.colliderType =  WALL2_MODEL_COLLIDERTYPE;
	tmpData.nMass =  WALL2_MODEL_MASS;
	tmpData.xmf3OffsetScale =  WALL2_MODEL_SCALE;
	tmpData.renderLayer =  WALL2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  WALL2_MODEL_SHADOW;
	g_DefaultObjectData.insert({  WALL2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( WALL2_MODEL_NAME);

	tmpData.pstrObjectPath = WALL_HALF_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WALL_HALF_MODEL_TEXPATH;
	tmpData.xmf3Extents = WALL_HALF_MODEL_EXTENTS;
	tmpData.objectType = WALL_HALF_MODEL_TYPE;
	tmpData.colliderType = WALL_HALF_MODEL_COLLIDERTYPE;
	tmpData.nMass = WALL_HALF_MODEL_MASS;
	tmpData.xmf3OffsetScale = WALL_HALF_MODEL_SCALE;
	tmpData.renderLayer = WALL_HALF_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WALL_HALF_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WALL_HALF_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WALL_HALF_MODEL_NAME);

	tmpData.pstrObjectPath = WALL_DOORWAY_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WALL_DOORWAY_MODEL_TEXPATH;
	tmpData.xmf3Extents = WALL_DOORWAY_MODEL_EXTENTS;
	tmpData.objectType = WALL_DOORWAY_MODEL_TYPE;
	tmpData.colliderType = WALL_DOORWAY_MODEL_COLLIDERTYPE;
	tmpData.nMass = WALL_DOORWAY_MODEL_MASS;
	tmpData.xmf3OffsetScale = WALL_DOORWAY_MODEL_SCALE;
	tmpData.renderLayer = WALL_DOORWAY_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WALL_DOORWAY_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WALL_DOORWAY_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WALL_DOORWAY_MODEL_NAME);

	tmpData.pstrObjectPath = WHEEL_CHAIR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WHEEL_CHAIR_MODEL_TEXPATH;
	tmpData.xmf3Extents = WHEEL_CHAIR_MODEL_EXTENTS;
	tmpData.objectType = WHEEL_CHAIR_MODEL_TYPE;
	tmpData.colliderType = WHEEL_CHAIR_MODEL_COLLIDERTYPE;
	tmpData.nMass = WHEEL_CHAIR_MODEL_MASS;
	tmpData.xmf3OffsetScale = WHEEL_CHAIR_MODEL_SCALE;
	tmpData.renderLayer = WHEEL_CHAIR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WHEEL_CHAIR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WHEEL_CHAIR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WHEEL_CHAIR_MODEL_NAME);

	tmpData.pstrObjectPath = WINDOW_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WINDOW_MODEL_TEXPATH;
	tmpData.xmf3Extents = WINDOW_MODEL_EXTENTS;
	tmpData.objectType = WINDOW_MODEL_TYPE;
	tmpData.colliderType = WINDOW_MODEL_COLLIDERTYPE;
	tmpData.nMass = WINDOW_MODEL_MASS;
	tmpData.xmf3OffsetScale = WINDOW_MODEL_SCALE;
	tmpData.renderLayer = WINDOW_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WINDOW_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WINDOW_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WINDOW_MODEL_NAME);

	tmpData.pstrObjectPath = WINDOW_BARRIER_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WINDOW_BARRIER_MODEL_TEXPATH;
	tmpData.xmf3Extents = WINDOW_BARRIER_MODEL_EXTENTS;
	tmpData.objectType = WINDOW_BARRIER_MODEL_TYPE;
	tmpData.colliderType = WINDOW_BARRIER_MODEL_COLLIDERTYPE;
	tmpData.nMass = WINDOW_BARRIER_MODEL_MASS;
	tmpData.xmf3OffsetScale = WINDOW_BARRIER_MODEL_SCALE;
	tmpData.renderLayer = WINDOW_BARRIER_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WINDOW_BARRIER_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WINDOW_BARRIER_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WINDOW_BARRIER_MODEL_NAME);

	tmpData.pstrObjectPath = WINDOW_HALL_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = WINDOW_HALL_MODEL_TEXPATH;
	tmpData.xmf3Extents = WINDOW_HALL_MODEL_EXTENTS;
	tmpData.objectType = WINDOW_HALL_MODEL_TYPE;
	tmpData.colliderType = WINDOW_HALL_MODEL_COLLIDERTYPE;
	tmpData.nMass = WINDOW_HALL_MODEL_MASS;
	tmpData.xmf3OffsetScale = WINDOW_HALL_MODEL_SCALE;
	tmpData.renderLayer = WINDOW_HALL_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = WINDOW_HALL_MODEL_SHADOW;
	g_DefaultObjectData.insert({ WINDOW_HALL_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(WINDOW_HALL_MODEL_NAME);

	tmpData.pstrObjectPath = BB_1X1X1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BB_1X1X1_MODEL_TEXPATH;
	tmpData.xmf3Extents = BB_1X1X1_MODEL_EXTENTS;
	tmpData.objectType = BB_1X1X1_MODEL_TYPE;
	tmpData.colliderType = BB_1X1X1_MODEL_COLLIDERTYPE;
	tmpData.nMass = BB_1X1X1_MODEL_MASS;
	tmpData.xmf3OffsetScale = BB_1X1X1_MODEL_SCALE;
	tmpData.renderLayer = BB_1X1X1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BB_1X1X1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BB_1X1X1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BB_1X1X1_MODEL_NAME);

	tmpData.pstrObjectPath = BB_1X8X1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BB_1X8X1_MODEL_TEXPATH;
	tmpData.xmf3Extents = BB_1X8X1_MODEL_EXTENTS;
	tmpData.objectType = BB_1X8X1_MODEL_TYPE;
	tmpData.colliderType = BB_1X8X1_MODEL_COLLIDERTYPE;
	tmpData.nMass = BB_1X8X1_MODEL_MASS;
	tmpData.xmf3OffsetScale = BB_1X8X1_MODEL_SCALE;
	tmpData.renderLayer = BB_1X8X1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BB_1X8X1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BB_1X8X1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BB_1X8X1_MODEL_NAME);

	tmpData.pstrObjectPath = BB_4X8X1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BB_4X8X1_MODEL_TEXPATH;
	tmpData.xmf3Extents = BB_4X8X1_MODEL_EXTENTS;
	tmpData.objectType = BB_4X8X1_MODEL_TYPE;
	tmpData.colliderType = BB_4X8X1_MODEL_COLLIDERTYPE;
	tmpData.nMass = BB_4X8X1_MODEL_MASS;
	tmpData.xmf3OffsetScale = BB_4X8X1_MODEL_SCALE;
	tmpData.renderLayer = BB_4X8X1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BB_4X8X1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BB_4X8X1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BB_4X8X1_MODEL_NAME);

	tmpData.pstrObjectPath = BB_8X16X1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BB_8X16X1_MODEL_TEXPATH;
	tmpData.xmf3Extents = BB_8X16X1_MODEL_EXTENTS;
	tmpData.objectType = BB_8X16X1_MODEL_TYPE;
	tmpData.colliderType = BB_8X16X1_MODEL_COLLIDERTYPE;
	tmpData.nMass = BB_8X16X1_MODEL_MASS;
	tmpData.xmf3OffsetScale = BB_8X16X1_MODEL_SCALE;
	tmpData.renderLayer = BB_8X16X1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BB_8X16X1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BB_8X16X1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BB_8X16X1_MODEL_NAME);

	tmpData.pstrObjectPath = BB_CORNER_8X8X1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BB_CORNER_8X8X1_MODEL_TEXPATH;
	tmpData.xmf3Extents = BB_CORNER_8X8X1_MODEL_EXTENTS;
	tmpData.objectType = BB_CORNER_8X8X1_MODEL_TYPE;
	tmpData.colliderType = BB_CORNER_8X8X1_MODEL_COLLIDERTYPE;
	tmpData.nMass = BB_CORNER_8X8X1_MODEL_MASS;
	tmpData.xmf3OffsetScale = BB_CORNER_8X8X1_MODEL_SCALE;
	tmpData.renderLayer = BB_CORNER_8X8X1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(-1.5f, 0, 1.5f);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BB_CORNER_8X8X1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BB_CORNER_8X8X1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BB_CORNER_8X8X1_MODEL_NAME);

	tmpData.pstrObjectPath = BUILDING_FLOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BUILDING_FLOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = BUILDING_FLOOR_MODEL_EXTENTS;
	tmpData.objectType = BUILDING_FLOOR_MODEL_TYPE;
	tmpData.colliderType = BUILDING_FLOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = BUILDING_FLOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = BUILDING_FLOOR_MODEL_SCALE;
	tmpData.renderLayer = BUILDING_FLOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(tmpData.xmf3Extents.x, 0, -tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BUILDING_FLOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BUILDING_FLOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BUILDING_FLOOR_MODEL_NAME);

	tmpData.pstrObjectPath = BUILDING_FLOOR_SHORT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = BUILDING_FLOOR_SHORT_MODEL_TEXPATH;
	tmpData.xmf3Extents = BUILDING_FLOOR_SHORT_MODEL_EXTENTS;
	tmpData.objectType = BUILDING_FLOOR_SHORT_MODEL_TYPE;
	tmpData.colliderType = BUILDING_FLOOR_SHORT_MODEL_COLLIDERTYPE;
	tmpData.nMass = BUILDING_FLOOR_SHORT_MODEL_MASS;
	tmpData.xmf3OffsetScale = BUILDING_FLOOR_SHORT_MODEL_SCALE;
	tmpData.renderLayer = BUILDING_FLOOR_SHORT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(tmpData.xmf3Extents.x, 0, -tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = BUILDING_FLOOR_SHORT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ BUILDING_FLOOR_SHORT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(BUILDING_FLOOR_SHORT_MODEL_NAME);

	tmpData.pstrObjectPath = CARPET_10_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CARPET_10_MODEL_TEXPATH;
	tmpData.xmf3Extents = CARPET_10_MODEL_EXTENTS;
	tmpData.objectType = CARPET_10_MODEL_TYPE;
	tmpData.colliderType = CARPET_10_MODEL_COLLIDERTYPE;
	tmpData.nMass = CARPET_10_MODEL_MASS;
	tmpData.xmf3OffsetScale = CARPET_10_MODEL_SCALE;
	tmpData.renderLayer = CARPET_10_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CARPET_10_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CARPET_10_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CARPET_10_MODEL_NAME);

	tmpData.pstrObjectPath = CENTER_PLATFORM_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CENTER_PLATFORM_MODEL_TEXPATH;
	tmpData.xmf3Extents = CENTER_PLATFORM_MODEL_EXTENTS;
	tmpData.objectType = CENTER_PLATFORM_MODEL_TYPE;
	tmpData.colliderType = CENTER_PLATFORM_MODEL_COLLIDERTYPE;
	tmpData.nMass = CENTER_PLATFORM_MODEL_MASS;
	tmpData.xmf3OffsetScale = CENTER_PLATFORM_MODEL_SCALE;
	tmpData.renderLayer = CENTER_PLATFORM_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(tmpData.xmf3Extents.x, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CENTER_PLATFORM_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CENTER_PLATFORM_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CENTER_PLATFORM_MODEL_NAME);

	tmpData.pstrObjectPath = CUEBE_CHAINS_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = CUEBE_CHAINS_MODEL_TEXPATH;
	tmpData.xmf3Extents = CUEBE_CHAINS_MODEL_EXTENTS;
	tmpData.objectType = CUEBE_CHAINS_MODEL_TYPE;
	tmpData.colliderType = CUEBE_CHAINS_MODEL_COLLIDERTYPE;
	tmpData.nMass = CUEBE_CHAINS_MODEL_MASS;
	tmpData.xmf3OffsetScale = CUEBE_CHAINS_MODEL_SCALE;
	tmpData.renderLayer = CUEBE_CHAINS_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = CUEBE_CHAINS_MODEL_SHADOW;
	g_DefaultObjectData.insert({ CUEBE_CHAINS_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(CUEBE_CHAINS_MODEL_NAME);

	tmpData.pstrObjectPath = DUNGEON_FLOOR_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = DUNGEON_FLOOR_MODEL_TEXPATH;
	tmpData.xmf3Extents = DUNGEON_FLOOR_MODEL_EXTENTS;
	tmpData.objectType = DUNGEON_FLOOR_MODEL_TYPE;
	tmpData.colliderType = DUNGEON_FLOOR_MODEL_COLLIDERTYPE;
	tmpData.nMass = DUNGEON_FLOOR_MODEL_MASS;
	tmpData.xmf3OffsetScale = DUNGEON_FLOOR_MODEL_SCALE;
	tmpData.renderLayer = DUNGEON_FLOOR_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = DUNGEON_FLOOR_MODEL_SHADOW;
	g_DefaultObjectData.insert({ DUNGEON_FLOOR_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(DUNGEON_FLOOR_MODEL_NAME);

	tmpData.pstrObjectPath =  DUNGEON_ROOF_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  DUNGEON_ROOF_MODEL_TEXPATH;
	tmpData.xmf3Extents =  DUNGEON_ROOF_MODEL_EXTENTS;
	tmpData.objectType =  DUNGEON_ROOF_MODEL_TYPE;
	tmpData.colliderType =  DUNGEON_ROOF_MODEL_COLLIDERTYPE;
	tmpData.nMass =  DUNGEON_ROOF_MODEL_MASS;
	tmpData.xmf3OffsetScale =  DUNGEON_ROOF_MODEL_SCALE;
	tmpData.renderLayer =  DUNGEON_ROOF_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  DUNGEON_ROOF_MODEL_SHADOW;
	g_DefaultObjectData.insert({  DUNGEON_ROOF_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( DUNGEON_ROOF_MODEL_NAME);

	tmpData.pstrObjectPath = FLAG1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = FLAG1_MODEL_TEXPATH;
	tmpData.xmf3Extents = FLAG1_MODEL_EXTENTS;
	tmpData.objectType = FLAG1_MODEL_TYPE;
	tmpData.colliderType = FLAG1_MODEL_COLLIDERTYPE;
	tmpData.nMass = FLAG1_MODEL_MASS;
	tmpData.xmf3OffsetScale = FLAG1_MODEL_SCALE;
	tmpData.renderLayer = FLAG1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = FLAG1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ FLAG1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(FLAG1_MODEL_NAME);

	tmpData.pstrObjectPath = FLAG2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = FLAG2_MODEL_TEXPATH;
	tmpData.xmf3Extents = FLAG2_MODEL_EXTENTS;
	tmpData.objectType = FLAG2_MODEL_TYPE;
	tmpData.colliderType = FLAG2_MODEL_COLLIDERTYPE;
	tmpData.nMass = FLAG2_MODEL_MASS;
	tmpData.xmf3OffsetScale = FLAG2_MODEL_SCALE;
	tmpData.renderLayer = FLAG2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = FLAG2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ FLAG2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(FLAG2_MODEL_NAME);

	tmpData.pstrObjectPath =  KANDLE1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  KANDLE1_MODEL_TEXPATH;
	tmpData.xmf3Extents =  KANDLE1_MODEL_EXTENTS;
	tmpData.objectType =  KANDLE1_MODEL_TYPE;
	tmpData.colliderType =  KANDLE1_MODEL_COLLIDERTYPE;
	tmpData.nMass =  KANDLE1_MODEL_MASS;
	tmpData.xmf3OffsetScale =  KANDLE1_MODEL_SCALE;
	tmpData.renderLayer =  KANDLE1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  KANDLE1_MODEL_SHADOW;
	g_DefaultObjectData.insert({  KANDLE1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( KANDLE1_MODEL_NAME);

	tmpData.pstrObjectPath =  KANDLE2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  KANDLE2_MODEL_TEXPATH;
	tmpData.xmf3Extents =  KANDLE2_MODEL_EXTENTS;
	tmpData.objectType =  KANDLE2_MODEL_TYPE;
	tmpData.colliderType =  KANDLE2_MODEL_COLLIDERTYPE;
	tmpData.nMass =  KANDLE2_MODEL_MASS;
	tmpData.xmf3OffsetScale =  KANDLE2_MODEL_SCALE;
	tmpData.renderLayer =  KANDLE2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  KANDLE2_MODEL_SHADOW;
	g_DefaultObjectData.insert({  KANDLE2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( KANDLE2_MODEL_NAME);

	tmpData.pstrObjectPath =  KANDLE3_MODEL_OBJECTPATH;
	tmpData.pstrTexPath =  KANDLE3_MODEL_TEXPATH;
	tmpData.xmf3Extents =  KANDLE3_MODEL_EXTENTS;
	tmpData.objectType =  KANDLE3_MODEL_TYPE;
	tmpData.colliderType =  KANDLE3_MODEL_COLLIDERTYPE;
	tmpData.nMass =  KANDLE3_MODEL_MASS;
	tmpData.xmf3OffsetScale =  KANDLE3_MODEL_SCALE;
	tmpData.renderLayer =  KANDLE3_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed =  KANDLE3_MODEL_SHADOW;
	g_DefaultObjectData.insert({  KANDLE3_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back( KANDLE3_MODEL_NAME);

	tmpData.pstrObjectPath = MAGIC_CRYSTAL_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = MAGIC_CRYSTAL_MODEL_TEXPATH;
	tmpData.xmf3Extents = MAGIC_CRYSTAL_MODEL_EXTENTS;
	tmpData.objectType = MAGIC_CRYSTAL_MODEL_TYPE;
	tmpData.colliderType = MAGIC_CRYSTAL_MODEL_COLLIDERTYPE;
	tmpData.nMass = MAGIC_CRYSTAL_MODEL_MASS;
	tmpData.xmf3OffsetScale = MAGIC_CRYSTAL_MODEL_SCALE;
	tmpData.renderLayer = MAGIC_CRYSTAL_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = MAGIC_CRYSTAL_MODEL_SHADOW;
	g_DefaultObjectData.insert({ MAGIC_CRYSTAL_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(MAGIC_CRYSTAL_MODEL_NAME);

	tmpData.pstrObjectPath = METAL_BRIDGELEG_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = METAL_BRIDGELEG_MODEL_TEXPATH;
	tmpData.xmf3Extents = METAL_BRIDGELEG_MODEL_EXTENTS;
	tmpData.objectType = METAL_BRIDGELEG_MODEL_TYPE;
	tmpData.colliderType = METAL_BRIDGELEG_MODEL_COLLIDERTYPE;
	tmpData.nMass = METAL_BRIDGELEG_MODEL_MASS;
	tmpData.xmf3OffsetScale = METAL_BRIDGELEG_MODEL_SCALE;
	tmpData.renderLayer = METAL_BRIDGELEG_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = METAL_BRIDGELEG_MODEL_SHADOW;
	g_DefaultObjectData.insert({ METAL_BRIDGELEG_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(METAL_BRIDGELEG_MODEL_NAME);

	tmpData.pstrObjectPath = METAL_BRIDGELEG_SIDE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = METAL_BRIDGELEG_SIDE_MODEL_TEXPATH;
	tmpData.xmf3Extents = METAL_BRIDGELEG_SIDE_MODEL_EXTENTS;
	tmpData.objectType = METAL_BRIDGELEG_SIDE_MODEL_TYPE;
	tmpData.colliderType = METAL_BRIDGELEG_SIDE_MODEL_COLLIDERTYPE;
	tmpData.nMass = METAL_BRIDGELEG_SIDE_MODEL_MASS;
	tmpData.xmf3OffsetScale = METAL_BRIDGELEG_SIDE_MODEL_SCALE;
	tmpData.renderLayer = METAL_BRIDGELEG_SIDE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(-4.0f, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = METAL_BRIDGELEG_SIDE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ METAL_BRIDGELEG_SIDE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(METAL_BRIDGELEG_SIDE_MODEL_NAME);

	tmpData.pstrObjectPath = ROCK_FORMATION1_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ROCK_FORMATION1_MODEL_TEXPATH;
	tmpData.xmf3Extents = ROCK_FORMATION1_MODEL_EXTENTS;
	tmpData.objectType = ROCK_FORMATION1_MODEL_TYPE;
	tmpData.colliderType = ROCK_FORMATION1_MODEL_COLLIDERTYPE;
	tmpData.nMass = ROCK_FORMATION1_MODEL_MASS;
	tmpData.xmf3OffsetScale = ROCK_FORMATION1_MODEL_SCALE;
	tmpData.renderLayer = ROCK_FORMATION1_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ROCK_FORMATION1_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ROCK_FORMATION1_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ROCK_FORMATION1_MODEL_NAME);

	tmpData.pstrObjectPath = ROCK_FORMATION2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ROCK_FORMATION2_MODEL_TEXPATH;
	tmpData.xmf3Extents = ROCK_FORMATION2_MODEL_EXTENTS;
	tmpData.objectType = ROCK_FORMATION2_MODEL_TYPE;
	tmpData.colliderType = ROCK_FORMATION2_MODEL_COLLIDERTYPE;
	tmpData.nMass = ROCK_FORMATION2_MODEL_MASS;
	tmpData.xmf3OffsetScale = ROCK_FORMATION2_MODEL_SCALE;
	tmpData.renderLayer = ROCK_FORMATION2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ROCK_FORMATION2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ROCK_FORMATION2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ROCK_FORMATION2_MODEL_NAME);

	tmpData.pstrObjectPath = ROCK_FORMATION5_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = ROCK_FORMATION5_MODEL_TEXPATH;
	tmpData.xmf3Extents = ROCK_FORMATION5_MODEL_EXTENTS;
	tmpData.objectType = ROCK_FORMATION5_MODEL_TYPE;
	tmpData.colliderType = ROCK_FORMATION5_MODEL_COLLIDERTYPE;
	tmpData.nMass = ROCK_FORMATION5_MODEL_MASS;
	tmpData.xmf3OffsetScale = ROCK_FORMATION5_MODEL_SCALE;
	tmpData.renderLayer = ROCK_FORMATION5_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = ROCK_FORMATION5_MODEL_SHADOW;
	g_DefaultObjectData.insert({ ROCK_FORMATION5_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(ROCK_FORMATION5_MODEL_NAME);

	tmpData.pstrObjectPath = SANCTUARY_CUBE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = SANCTUARY_CUBE_MODEL_TEXPATH;
	tmpData.xmf3Extents = SANCTUARY_CUBE_MODEL_EXTENTS;
	tmpData.objectType = SANCTUARY_CUBE_MODEL_TYPE;
	tmpData.colliderType = SANCTUARY_CUBE_MODEL_COLLIDERTYPE;
	tmpData.nMass = SANCTUARY_CUBE_MODEL_MASS;
	tmpData.xmf3OffsetScale = SANCTUARY_CUBE_MODEL_SCALE;
	tmpData.renderLayer = SANCTUARY_CUBE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = SANCTUARY_CUBE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ SANCTUARY_CUBE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(SANCTUARY_CUBE_MODEL_NAME);

	tmpData.pstrObjectPath = STATUE_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = STATUE_MODEL_TEXPATH;
	tmpData.xmf3Extents = STATUE_MODEL_EXTENTS;
	tmpData.objectType = STATUE_MODEL_TYPE;
	tmpData.colliderType = STATUE_MODEL_COLLIDERTYPE;
	tmpData.nMass = STATUE_MODEL_MASS;
	tmpData.xmf3OffsetScale = STATUE_MODEL_SCALE;
	tmpData.renderLayer = STATUE_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = STATUE_MODEL_SHADOW;
	g_DefaultObjectData.insert({ STATUE_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(STATUE_MODEL_NAME);

	tmpData.pstrObjectPath = STATUE2_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = STATUE2_MODEL_TEXPATH;
	tmpData.xmf3Extents = STATUE2_MODEL_EXTENTS;
	tmpData.objectType = STATUE2_MODEL_TYPE;
	tmpData.colliderType = STATUE2_MODEL_COLLIDERTYPE;
	tmpData.nMass = STATUE2_MODEL_MASS;
	tmpData.xmf3OffsetScale = STATUE2_MODEL_SCALE;
	tmpData.renderLayer = STATUE2_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = STATUE2_MODEL_SHADOW;
	g_DefaultObjectData.insert({ STATUE2_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(STATUE2_MODEL_NAME);

	tmpData.pstrObjectPath = TELEPORT_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = TELEPORT_MODEL_TEXPATH;
	tmpData.xmf3Extents = TELEPORT_MODEL_EXTENTS;
	tmpData.objectType = TELEPORT_MODEL_TYPE;
	tmpData.colliderType = TELEPORT_MODEL_COLLIDERTYPE;
	tmpData.nMass = TELEPORT_MODEL_MASS;
	tmpData.xmf3OffsetScale = TELEPORT_MODEL_SCALE;
	tmpData.renderLayer = TELEPORT_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = TELEPORT_MODEL_SHADOW;
	g_DefaultObjectData.insert({ TELEPORT_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(TELEPORT_MODEL_NAME);

	tmpData.pstrObjectPath = TOWER_EXTENTION_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = TOWER_EXTENTION_MODEL_TEXPATH;
	tmpData.xmf3Extents = TOWER_EXTENTION_MODEL_EXTENTS;
	tmpData.objectType = TOWER_EXTENTION_MODEL_TYPE;
	tmpData.colliderType = TOWER_EXTENTION_MODEL_COLLIDERTYPE;
	tmpData.nMass = TOWER_EXTENTION_MODEL_MASS;
	tmpData.xmf3OffsetScale = TOWER_EXTENTION_MODEL_SCALE;
	tmpData.renderLayer = TOWER_EXTENTION_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, 0, tmpData.xmf3Extents.z);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = TOWER_EXTENTION_MODEL_SHADOW;
	g_DefaultObjectData.insert({ TOWER_EXTENTION_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(TOWER_EXTENTION_MODEL_NAME);

	tmpData.pstrObjectPath = TUBECHANNEL_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = TUBECHANNEL_MODEL_TEXPATH;
	tmpData.xmf3Extents = TUBECHANNEL_MODEL_EXTENTS;
	tmpData.objectType = TUBECHANNEL_MODEL_TYPE;
	tmpData.colliderType = TUBECHANNEL_MODEL_COLLIDERTYPE;
	tmpData.nMass = TUBECHANNEL_MODEL_MASS;
	tmpData.xmf3OffsetScale = TUBECHANNEL_MODEL_SCALE;
	tmpData.renderLayer = TUBECHANNEL_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(-tmpData.xmf3Extents.x, 0,0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = TUBECHANNEL_MODEL_SHADOW;
	g_DefaultObjectData.insert({ TUBECHANNEL_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(TUBECHANNEL_MODEL_NAME);

	tmpData.pstrObjectPath = VINTILATIONBOX_MODEL_OBJECTPATH;
	tmpData.pstrTexPath = VINTILATIONBOX_MODEL_TEXPATH;
	tmpData.xmf3Extents = VINTILATIONBOX_MODEL_EXTENTS;
	tmpData.objectType = VINTILATIONBOX_MODEL_TYPE;
	tmpData.colliderType = VINTILATIONBOX_MODEL_COLLIDERTYPE;
	tmpData.nMass = VINTILATIONBOX_MODEL_MASS;
	tmpData.xmf3OffsetScale = VINTILATIONBOX_MODEL_SCALE;
	tmpData.renderLayer = VINTILATIONBOX_MODEL_RENDERLAYER;
	tmpData.xmf3MeshOffsetPosition = XMFLOAT3(0, tmpData.xmf3Extents.y, 0);
	tmpData.xmf3MeshOffsetRotation = XMFLOAT3(0, 0, 0);
	tmpData.bShadowed = VINTILATIONBOX_MODEL_SHADOW;
	g_DefaultObjectData.insert({ VINTILATIONBOX_MODEL_NAME, tmpData });
	g_DefaultObjectNames.emplace_back(VINTILATIONBOX_MODEL_NAME);

}
